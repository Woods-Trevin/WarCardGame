{"ast":null,"code":"var _jsxFileName = \"/Users/liu/Desktop/AppAcademy/TakeHomeProj/frontend/war_card_game/src/components/mainpage/index.js\",\n    _s = $RefreshSig$();\n\nimport \"./mainpage.css\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as playerDecks from '../../store/playerdecks';\nimport club from '../images/club.png';\nimport spade from '../images/spade.jpg';\nimport heart from '../images/heart.png';\nimport diamond from '../images/diamond.jpeg';\nimport cardback from '../images/cardback.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst deck = require('../../deck');\n\nfunction Mainpage() {\n  _s();\n\n  const [shuffledDeck, setShuffledDeck] = useState(); // console.log(shuffledDeck);\n\n  const [playerOneCards, setPlayerOneCards] = useState();\n  const [playerTwoCards, setPlayerTwoCards] = useState();\n  const dispatch = useDispatch();\n  const pOneDeck = useSelector(state => {\n    var _state$playerDecks;\n\n    return (_state$playerDecks = state.playerDecks) === null || _state$playerDecks === void 0 ? void 0 : _state$playerDecks.playerOneDeck;\n  }); // console.log(pOneDeck?.length)\n\n  const pTwoDeck = useSelector(state => {\n    var _state$playerDecks2;\n\n    return (_state$playerDecks2 = state.playerDecks) === null || _state$playerDecks2 === void 0 ? void 0 : _state$playerDecks2.playerTwoDeck;\n  }); // console.log(pTwoDeck?.length)\n\n  const [renderStartBtn, setRenderStartBtn] = useState(true);\n\n  function shuffle(deck) {\n    let currentIndex = deck.length;\n    let randomIndex = 0; // O(n)\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [deck[currentIndex], deck[randomIndex]] = [deck[randomIndex], deck[currentIndex]];\n    } // console.log(deck);\n\n\n    return deck;\n  }\n\n  function distributeCards(deck) {\n    let playerOneCards = deck.splice(0, 26);\n    setPlayerOneCards(playerOneCards);\n    let playerTwoCards = deck;\n    setPlayerTwoCards(playerTwoCards);\n  }\n\n  const translateFC = cardVal => {\n    console.log(cardVal, \"CARD VALUE FOR FACECARD\");\n\n    if (cardVal === 'J') {\n      return 11;\n    } else if (cardVal === 'Q') {\n      return 12;\n    } else if (cardVal === 'K') {\n      return 13;\n    } else if (cardVal === 'A') {\n      return 14;\n    } else {\n      return Number(cardVal);\n    }\n  };\n\n  const calculate = (pOneCard, pTwoCard) => {\n    const pOneCardSplit = pOneCard.split(',');\n    console.log(pOneCardSplit);\n    const pTwoCardSplit = pTwoCard.split(',');\n    console.log(pTwoCardSplit);\n\n    if (pOneCardSplit[3] === 'false' && pTwoCardSplit[3] === 'false') {\n      //both cards are number cards\n      //compare numbers from index 1 of initial split    \n      if (Number(pOneCardSplit[1]) < Number(pTwoCardSplit[1])) {\n        sessionStorage.setItem('winner', 2);\n        setPhase(Phase.Distribution);\n        sessionStorage.setItem('phase', Phase.Distribution);\n        sessionStorage.setItem('war', 'No War');\n      } else if (Number(pOneCardSplit[1]) > Number(pTwoCardSplit[1])) {\n        sessionStorage.setItem('winner', 1);\n        setPhase(Phase.Distribution);\n        sessionStorage.setItem('phase', Phase.Distribution);\n        sessionStorage.setItem('war', 'No War');\n      } else {\n        setPhase(Phase.War);\n        sessionStorage.setItem('phase', Phase.War);\n        sessionStorage.setItem('war', 'War');\n      }\n    } else if (!(pOneCardSplit[3] === 'false' && pTwoCardSplit[3] === 'false')) {\n      //either both cards are not number cards or one card is not a number card\n      const pOneCardVal = pOneCardSplit[1];\n      const pTwoCardVal = pTwoCardSplit[1];\n      const pOneVal = translateFC(pOneCardVal);\n      console.log(pOneVal, \"VALUE OF PLAYER ONE CARD\");\n      const pTwoVal = translateFC(pTwoCardVal);\n      console.log(pTwoVal, \"VALUE OF PLAYER TWO CARD\");\n\n      if (pOneVal > pTwoVal) {\n        sessionStorage.setItem('winner', 1);\n        setPhase(Phase.Distribution);\n        sessionStorage.setItem('phase', Phase.Distribution);\n        sessionStorage.setItem('war', 'No War');\n      } else if (pOneVal < pTwoVal) {\n        sessionStorage.setItem('winner', 2);\n        setPhase(Phase.Distribution);\n        sessionStorage.setItem('phase', Phase.Distribution);\n        sessionStorage.setItem('war', 'No War');\n      } else {\n        setPhase(Phase.War);\n        sessionStorage.setItem('phase', Phase.War);\n        sessionStorage.setItem('war', 'War');\n      }\n    }\n  };\n\n  function battle(pOneFaceUp, pTwoFaceUp) {\n    let fd1 = 1;\n    let fd2 = 2;\n    let fd3 = 3;\n    let potArray = [];\n\n    if (pOneFaceUp.face === 'false' && pTwoFaceUp.face === 'false') {\n      let pOneFaceDownOne = pOneDeck[fd1];\n      let pOneFaceDownTwo = pOneDeck[fd2];\n      let pOneFaceDownThree = pOneDeck[fd3];\n      let pTwoFaceDownOne = pTwoDeck[fd1];\n      let pTwoFaceDownTwo = pTwoDeck[fd2];\n      let pTwoFaceDownThree = pTwoDeck[fd3];\n      potArray.push(pOneFaceDownOne);\n      potArray.push(pOneFaceDownTwo);\n      potArray.push(pOneFaceDownThree);\n      potArray.push(pOneFaceUp);\n      potArray.push(pTwoFaceDownOne);\n      potArray.push(pTwoFaceDownTwo);\n      potArray.push(pTwoFaceDownThree);\n      potArray.push(pTwoFaceUp); // console.log(potArray, \"POT ARRAY WHEN CARDS ARE NOT FCs\")\n\n      if (Number(pOneFaceUp.number) < Number(pTwoFaceUp.number)) {\n        sessionStorage.setItem('winner', 2);\n      } else {\n        sessionStorage.setItem('winner', 1);\n      }\n    } else {\n      let pOneFaceDownOne = pOneDeck[fd1];\n      let pOneFaceDownTwo = pOneDeck[fd2];\n      let pOneFaceDownThree = pOneDeck[fd3];\n      potArray.push(pOneFaceDownOne);\n      potArray.push(pOneFaceDownTwo);\n      potArray.push(pOneFaceDownThree);\n      potArray.push(pOneFaceUp);\n      let pTwoFaceDownOne = pTwoDeck[fd1];\n      let pTwoFaceDownTwo = pTwoDeck[fd2];\n      let pTwoFaceDownThree = pTwoDeck[fd3];\n      potArray.push(pTwoFaceDownOne);\n      potArray.push(pTwoFaceDownTwo);\n      potArray.push(pTwoFaceDownThree);\n      potArray.push(pTwoFaceUp); // console.log(potArray, \"POT ARRAY WHEN ATLEAST ONE CARD IS FC\")\n\n      let pOneFUVal = translateFC(pOneFaceUp.number);\n      let pTwoFUVal = translateFC(pTwoFaceUp.number);\n\n      if (pOneFUVal > pTwoFUVal) {\n        sessionStorage.setItem('winner', 1);\n      } else {\n        sessionStorage.setItem('winner', 2);\n      }\n    }\n\n    return potArray;\n  }\n\n  const amtCardsDisplayed = array => {\n    if (array.length < 10) {\n      return 0;\n    } else if (array.length < 10) {\n      return 1;\n    } else if (array.length < 20) {\n      return 2;\n    } else if (array.length < 35) {\n      return 3;\n    } else if (array.length < 53) {\n      return 4;\n    }\n  };\n\n  const Phase = {\n    Draw: 'Draw',\n    Calculation: 'Calculation',\n    War: 'War',\n    Distribution: 'Distribution',\n    End: 'End'\n  };\n  const currentPhase = sessionStorage.getItem('phase');\n  const [phase, setPhase] = useState(currentPhase ? currentPhase : null);\n  const [pOneCardSuit, setPOneCardSuit] = useState();\n  const [pTwoCardSuit, setPTwoCardSuit] = useState();\n  const [pOneCardNumber, setPOneCardNumber] = useState();\n  const [pTwoCardNumber, setPTwoCardNumber] = useState();\n  const [pOneDeckHeight, setPOneDeckHeight] = useState();\n  const [pTwoDeckHeight, setPTwoDeckHeight] = useState(); // console.log(phase, \"CURRENT PHASE\")\n\n  let OPERATIONSPEED = 2500;\n  useEffect(async () => {\n    const shuffledDeck = shuffle(deck);\n    setShuffledDeck(shuffledDeck);\n    distributeCards(shuffledDeck);\n    await dispatch(playerDecks.get_player_decks());\n    await dispatch(playerDecks.getPot());\n\n    if (phase) {\n      setRenderStartBtn(false);\n    } else {\n      setRenderStartBtn(true);\n    }\n\n    console.log(\"RERENDER\");\n\n    switch (phase) {\n      case Phase.Draw:\n        console.log(\"REACHED DRAW PHASE\");\n        let numPOneCardsToDisplay = amtCardsDisplayed(pOneDeck);\n        setPOneDeckHeight(numPOneCardsToDisplay);\n        let numPTwoCardsToDisplay = amtCardsDisplayed(pTwoDeck);\n        setPTwoDeckHeight(numPTwoCardsToDisplay);\n        const pOneDraw = pOneDeck.shift();\n        console.log(pOneDraw, \"PONE DRAW\");\n        const pTwoDraw = pTwoDeck.shift();\n        console.log(pTwoDraw, \"PTWO DRAW\");\n\n        if (!pOneDeck.length || !pTwoDeck.length) {\n          const timeout = setTimeout(async () => {\n            if (pOneDeck.length > pTwoDeck.length) {\n              sessionStorage.setItem('FinalWinner', 1);\n            } else {\n              sessionStorage.setItem('FinalWinner', 2);\n            }\n\n            setPhase(Phase.End);\n            sessionStorage.setItem('phase', Phase.End);\n          }, OPERATIONSPEED);\n          return () => clearTimeout(timeout);\n        }\n\n        const payload = [pOneDraw, pTwoDraw];\n        sessionStorage.setItem(\"pOneDraw\", [pOneDraw === null || pOneDraw === void 0 ? void 0 : pOneDraw.association, pOneDraw === null || pOneDraw === void 0 ? void 0 : pOneDraw.number, pOneDraw === null || pOneDraw === void 0 ? void 0 : pOneDraw.suit, pOneDraw === null || pOneDraw === void 0 ? void 0 : pOneDraw.face]);\n        sessionStorage.setItem(\"pOneCardSuit\", pOneDraw === null || pOneDraw === void 0 ? void 0 : pOneDraw.suit);\n        sessionStorage.setItem(\"pOneCardNum\", pOneDraw === null || pOneDraw === void 0 ? void 0 : pOneDraw.number);\n        setPOneCardSuit(sessionStorage.getItem(\"pOneCardSuit\"));\n        setPOneCardNumber(sessionStorage.getItem(\"pOneCardNum\"));\n        sessionStorage.setItem(\"pTwoDraw\", [pTwoDraw === null || pTwoDraw === void 0 ? void 0 : pTwoDraw.association, pTwoDraw === null || pTwoDraw === void 0 ? void 0 : pTwoDraw.number, pTwoDraw === null || pTwoDraw === void 0 ? void 0 : pTwoDraw.suit, pTwoDraw === null || pTwoDraw === void 0 ? void 0 : pTwoDraw.face]);\n        sessionStorage.setItem(\"pTwoCardSuit\", pTwoDraw === null || pTwoDraw === void 0 ? void 0 : pTwoDraw.suit);\n        sessionStorage.setItem(\"pTwoCardNum\", pTwoDraw === null || pTwoDraw === void 0 ? void 0 : pTwoDraw.number);\n        setPTwoCardSuit(sessionStorage.getItem(\"pTwoCardSuit\"));\n        setPTwoCardNumber(sessionStorage.getItem(\"pTwoCardNum\"));\n        await dispatch(playerDecks.addToPot({\n          drawnCards: payload\n        }));\n        const timeout = setTimeout(async () => {\n          setPhase(Phase.Calculation);\n          sessionStorage.setItem('phase', Phase.Calculation);\n        }, OPERATIONSPEED);\n        return () => clearTimeout(timeout);\n\n      case Phase.Calculation:\n        console.log(\"REACHED CALCULATION PHASE\");\n        const pOneCard = sessionStorage.getItem(\"pOneDraw\");\n        const pTwoCard = sessionStorage.getItem(\"pTwoDraw\");\n\n        if (pOneCard && pTwoCard) {\n          const timeout = setTimeout(() => {\n            calculate(pOneCard, pTwoCard);\n          }, OPERATIONSPEED);\n          return () => clearTimeout(timeout);\n        }\n\n        return;\n\n      case Phase.War:\n        console.log(\"REACHED WAR PHASE\"); //getting 5th card at index 4\n\n        let new_fu = 4;\n        let pOneFaceUp = pOneDeck[new_fu];\n        console.log(pOneFaceUp, \"CURRENT FACEUP PLAYER ONE\");\n        let pTwoFaceUp = pTwoDeck[new_fu];\n        console.log(pTwoFaceUp, \"CURRENT FACEUP PLAYER TWO\");\n\n        if (!pTwoFaceUp || !pOneFaceUp) {\n          const timeout = setTimeout(async () => {\n            setPhase(Phase.End);\n            sessionStorage.setItem('phase', Phase.End);\n          }, OPERATIONSPEED);\n          return () => clearTimeout(timeout);\n        }\n\n        if (pOneFaceUp !== pTwoFaceUp) {\n          const potArray = battle(pOneFaceUp, pTwoFaceUp);\n          console.log(potArray, \"FINAL POT ARRAY WHEN SOMEONE WINS\");\n          dispatch(playerDecks.addToPot({\n            drawnCards: potArray\n          }));\n          const timeout = setTimeout(() => {\n            sessionStorage.setItem('phase', Phase.Distribution);\n            setPhase(Phase.Distribution);\n          }, OPERATIONSPEED);\n          return () => clearTimeout(timeout);\n        } //getting all facedown cards after cards already held in pot\n\n\n        let fd1 = 1;\n        let fd2 = 2;\n        let fd3 = 3;\n        let potArray = [];\n\n        while (pOneFaceUp === pTwoFaceUp) {\n          let pOneFaceDownOne = pOneDeck[fd1];\n          let pOneFaceDownTwo = pOneDeck[fd2];\n          let pOneFaceDownThree = pOneDeck[fd3];\n          potArray.push(pOneFaceDownOne);\n          potArray.push(pOneFaceDownTwo);\n          potArray.push(pOneFaceDownThree);\n          potArray.push(pOneFaceUp);\n          let pTwoFaceDownOne = pTwoDeck[fd1];\n          let pTwoFaceDownTwo = pTwoDeck[fd2];\n          let pTwoFaceDownThree = pTwoDeck[fd3];\n          potArray.push(pTwoFaceDownOne);\n          potArray.push(pTwoFaceDownTwo);\n          potArray.push(pTwoFaceDownThree);\n          potArray.push(pTwoFaceUp);\n          console.log(potArray, \"POT ARRAY DURING AN ITERATION\");\n          new_fu += new_fu;\n          fd1 += new_fu;\n          fd2 += new_fu;\n          fd3 += new_fu;\n        }\n\n        console.log(potArray, \"FINAL POT ARRAY\");\n        let pOneFUVal = translateFC(pOneFaceUp.number);\n        let pTwoFUVal = translateFC(pTwoFaceUp.number);\n\n        if (potArray) {\n          if (pOneFUVal < pTwoFUVal) {\n            sessionStorage.setItem('winner', 2);\n            dispatch(playerDecks.addToPot({\n              drawnCards: potArray\n            }));\n            const timeout = setTimeout(() => {\n              sessionStorage.setItem('war', 'War');\n              sessionStorage.setItem('phase', Phase.Distribution);\n              setPhase(Phase.Distribution);\n            }, OPERATIONSPEED);\n            return () => clearTimeout(timeout);\n          } else {\n            sessionStorage.setItem('winner', 1);\n            dispatch(playerDecks.addToPot({\n              drawnCards: potArray\n            }));\n            const timeout = setTimeout(() => {\n              sessionStorage.setItem('war', 'War');\n              sessionStorage.setItem('phase', Phase.Distribution);\n              setPhase(Phase.Distribution);\n            }, OPERATIONSPEED);\n            return () => clearTimeout(timeout);\n          }\n        }\n\n        return;\n\n      case Phase.Distribution:\n        console.log(\"REACHED DISTRIBUTION PHASE\"); // const playerOneCard = sessionStorage.getItem(\"pOneDraw\")\n        // const playerTwoCard = sessionStorage.getItem(\"pTwoDraw\")\n\n        const winner = sessionStorage.getItem(\"winner\");\n        const war = sessionStorage.getItem(\"war\");\n\n        if (war === \"No War\") {\n          console.log(\"NO WAR\");\n\n          if (Number(winner) === 1) {\n            console.log('PLAYER ONE WON');\n            const data = await dispatch(playerDecks.DeleteAndDistributePlayerCards({\n              winner: Number(winner)\n            }));\n\n            if (data) {\n              const timeout = setTimeout(() => {\n                setPhase(Phase.Draw);\n                sessionStorage.setItem('phase', Phase.Draw);\n              }, OPERATIONSPEED);\n              return () => clearTimeout(timeout);\n            }\n          }\n\n          if (Number(winner) === 2) {\n            console.log('PLAYER TWO WON');\n            const data = await dispatch(playerDecks.DeleteAndDistributePlayerCards({\n              winner: Number(winner)\n            }));\n\n            if (data) {\n              const timeout = setTimeout(() => {\n                setPhase(Phase.Draw);\n                sessionStorage.setItem('phase', Phase.Draw);\n              }, OPERATIONSPEED);\n              return () => clearTimeout(timeout);\n            }\n          }\n        } else {\n          console.log(\"WAR\");\n\n          if (Number(winner) === 1) {\n            console.log('PLAYER ONE WON WAR');\n            const data = await dispatch(playerDecks.DeleteAndDistributePlayerCards({\n              winner: Number(winner)\n            }));\n\n            if (data) {\n              const timeout = setTimeout(() => {\n                setPhase(Phase.Draw);\n                sessionStorage.setItem('phase', Phase.Draw);\n              }, OPERATIONSPEED);\n              return () => clearTimeout(timeout);\n            }\n          }\n\n          if (Number(winner) === 2) {\n            console.log('PLAYER TWO WON WAR');\n            const data = await dispatch(playerDecks.DeleteAndDistributePlayerCards({\n              winner: Number(winner)\n            }));\n\n            if (data) {\n              const timeout = setTimeout(() => {\n                setPhase(Phase.Draw);\n                sessionStorage.setItem('phase', Phase.Draw);\n              }, OPERATIONSPEED);\n              return () => clearTimeout(timeout);\n            }\n          }\n        }\n\n        return;\n\n      case Phase.End:\n        console.log(\"REACHED END PHASE\");\n        const finalWinner = sessionStorage.getItem(\"FinalWinner\");\n        const data = await dispatch(playerDecks.recordVictory({\n          winner: finalWinner\n        }));\n\n        if (data) {\n          const timeout = setTimeout(() => {\n            setPhase(null);\n            sessionStorage.setItem('phase', null);\n          }, OPERATIONSPEED);\n          return () => clearTimeout(timeout);\n        }\n\n        return;\n    }\n  }, [dispatch, renderStartBtn, phase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outmost_ctnr\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_count_ctnr\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player_one_count_label\",\n        children: [\"Player One Card Count: \", pOneDeck === null || pOneDeck === void 0 ? void 0 : pOneDeck.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player_two_count_label\",\n        children: [\"Player Two Card Count: \", pTwoDeck === null || pTwoDeck === void 0 ? void 0 : pTwoDeck.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards_ctnr\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_ctnr--left\",\n        children: [pOneDeckHeight === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 46\n        }, this), pOneDeckHeight === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 46\n        }, this), pOneDeckHeight === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 46\n        }, this), (pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 72\n        }, this), (pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 72\n        }, this), (pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 72\n        }, this), (pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card seven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 96\n        }, this), (pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 96\n        }, this), (pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card nine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 96\n        }, this), (pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 120\n        }, this), (pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card eleven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 120\n        }, this), (pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card twelve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 120\n        }, this), (pOneDeckHeight === 0 || pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card thirteen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 144\n        }, this), (pOneDeckHeight === 0 || pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card fourteen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 144\n        }, this), (pOneDeckHeight === 0 || pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card fifteen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 144\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phasePrompt\",\n        children: [renderStartBtn && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"startGame_btn\",\n          onClick: async () => {\n            const data = await dispatch(playerDecks.addDecksToDatabase({\n              playerOneDeck: playerOneCards,\n              playerTwoDeck: playerTwoCards\n            }));\n\n            if (data) {\n              setRenderStartBtn(false);\n              sessionStorage.setItem('phase', Phase.Draw);\n              setPhase(Phase.Draw);\n            }\n          },\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 40\n        }, this), !renderStartBtn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"currentPhase_prompt_ctnr\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"currentPhase_label\",\n            children: \"Phase:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `currentPhase_prompt ${phase === Phase.War && 'war'}`,\n            children: phase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_ctnr--right\",\n        children: [pTwoDeckHeight === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 46\n        }, this), pTwoDeckHeight === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 46\n        }, this), pTwoDeckHeight === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 46\n        }, this), (pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 72\n        }, this), (pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 72\n        }, this), (pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 72\n        }, this), (pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card seven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 96\n        }, this), (pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 96\n        }, this), (pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card nine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 96\n        }, this), (pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 120\n        }, this), (pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card eleven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 120\n        }, this), (pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card twelve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 120\n        }, this), (pTwoDeckHeight === 0 || pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card thirteen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 144\n        }, this), (pTwoDeckHeight === 0 || pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card fourteen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 144\n        }, this), (pTwoDeckHeight === 0 || pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card fifteen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 144\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playing_field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pf--one\",\n        children: [phase === Phase.War && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"war_fd_cards_ctnr\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playerOne_pf_card card-slot1 facedown\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cardback,\n              className: \"facedown_cardImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playerOne_pf_card card-slot2 facedown\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cardback,\n              className: \"facedown_cardImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playerOne_pf_card card-slot3 facedown\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cardback,\n              className: \"facedown_cardImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top_suit_ctnr--left\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"card_num\",\n              children: pOneCardNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (pOneCardSuit === 'Club' ? club : undefined) || (pOneCardSuit === 'Heart' ? heart : undefined) || (pOneCardSuit === 'Diamond' ? diamond : undefined) || (pOneCardSuit === 'Spade' ? spade : undefined),\n              className: \"suit--top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mid_suit_ctnr\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (pOneCardSuit === 'Club' ? club : undefined) || (pOneCardSuit === 'Heart' ? heart : undefined) || (pOneCardSuit === 'Diamond' ? diamond : undefined) || (pOneCardSuit === 'Spade' ? spade : undefined),\n              className: \"suit--mid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_suit_ctnr--left\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (pOneCardSuit === 'Club' ? club : undefined) || (pOneCardSuit === 'Heart' ? heart : undefined) || (pOneCardSuit === 'Diamond' ? diamond : undefined) || (pOneCardSuit === 'Spade' ? spade : undefined),\n              className: \"suit--bottom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"card_num\",\n              children: pOneCardNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pf--two\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top_suit_ctnr--right\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"card_num\",\n              children: pTwoCardNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (pTwoCardSuit === 'Club' ? club : undefined) || (pTwoCardSuit === 'Heart' ? heart : undefined) || (pTwoCardSuit === 'Diamond' ? diamond : undefined) || (pTwoCardSuit === 'Spade' ? spade : undefined),\n              className: \"suit--top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mid_suit_ctnr\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (pTwoCardSuit === 'Club' ? club : undefined) || (pTwoCardSuit === 'Heart' ? heart : undefined) || (pTwoCardSuit === 'Diamond' ? diamond : undefined) || (pTwoCardSuit === 'Spade' ? spade : undefined),\n              className: \"suit--mid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_suit_ctnr--right\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: (pTwoCardSuit === 'Club' ? club : undefined) || (pTwoCardSuit === 'Heart' ? heart : undefined) || (pTwoCardSuit === 'Diamond' ? diamond : undefined) || (pTwoCardSuit === 'Spade' ? spade : undefined),\n              className: \"suit--bottom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"card_num\",\n              children: pTwoCardNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 21\n        }, this), phase === Phase.War && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"war_fd_cards_ctnr\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playerTwo_pf_card card-slot2 facedown\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cardback,\n              className: \"facedown_cardImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playerTwo_pf_card card-slot3 facedown\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cardback,\n              className: \"facedown_cardImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playerTwo_pf_card card-slot4 facedown\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cardback,\n              className: \"facedown_cardImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mainpage, \"uQtrENV8M58Jdpwqg23apu4Y+mY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Mainpage;\n;\nexport default Mainpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainpage\");","map":{"version":3,"sources":["/Users/liu/Desktop/AppAcademy/TakeHomeProj/frontend/war_card_game/src/components/mainpage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","playerDecks","club","spade","heart","diamond","cardback","deck","require","Mainpage","shuffledDeck","setShuffledDeck","playerOneCards","setPlayerOneCards","playerTwoCards","setPlayerTwoCards","dispatch","pOneDeck","state","playerOneDeck","pTwoDeck","playerTwoDeck","renderStartBtn","setRenderStartBtn","shuffle","currentIndex","length","randomIndex","Math","floor","random","distributeCards","splice","translateFC","cardVal","console","log","Number","calculate","pOneCard","pTwoCard","pOneCardSplit","split","pTwoCardSplit","sessionStorage","setItem","setPhase","Phase","Distribution","War","pOneCardVal","pTwoCardVal","pOneVal","pTwoVal","battle","pOneFaceUp","pTwoFaceUp","fd1","fd2","fd3","potArray","face","pOneFaceDownOne","pOneFaceDownTwo","pOneFaceDownThree","pTwoFaceDownOne","pTwoFaceDownTwo","pTwoFaceDownThree","push","number","pOneFUVal","pTwoFUVal","amtCardsDisplayed","array","Draw","Calculation","End","currentPhase","getItem","phase","pOneCardSuit","setPOneCardSuit","pTwoCardSuit","setPTwoCardSuit","pOneCardNumber","setPOneCardNumber","pTwoCardNumber","setPTwoCardNumber","pOneDeckHeight","setPOneDeckHeight","pTwoDeckHeight","setPTwoDeckHeight","OPERATIONSPEED","get_player_decks","getPot","numPOneCardsToDisplay","numPTwoCardsToDisplay","pOneDraw","shift","pTwoDraw","timeout","setTimeout","clearTimeout","payload","association","suit","addToPot","drawnCards","new_fu","winner","war","data","DeleteAndDistributePlayerCards","finalWinner","recordVictory","addDecksToDatabase","undefined"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,WAAZ,MAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,YAAD,CAApB;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,EAAhD,CADgB,CAEhB;;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,EAApD;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,EAApD;AACA,QAAMkB,QAAQ,GAAGjB,WAAW,EAA5B;AAEA,QAAMkB,QAAQ,GAAGjB,WAAW,CAACkB,KAAK;AAAA;;AAAA,iCAAIA,KAAK,CAACjB,WAAV,uDAAI,mBAAmBkB,aAAvB;AAAA,GAAN,CAA5B,CAPgB,CAQhB;;AACA,QAAMC,QAAQ,GAAGpB,WAAW,CAACkB,KAAK;AAAA;;AAAA,kCAAIA,KAAK,CAACjB,WAAV,wDAAI,oBAAmBoB,aAAvB;AAAA,GAAN,CAA5B,CATgB,CAUhB;;AAEA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,IAAD,CAApD;;AAKA,WAAS0B,OAAT,CAAiBjB,IAAjB,EAAuB;AACnB,QAAIkB,YAAY,GAAGlB,IAAI,CAACmB,MAAxB;AACA,QAAIC,WAAW,GAAG,CAAlB,CAFmB,CAInB;;AACA,WAAOF,YAAY,KAAK,CAAxB,EAA2B;AACvBE,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;AACAA,MAAAA,YAAY;AAEZ,OAAClB,IAAI,CAACkB,YAAD,CAAL,EAAqBlB,IAAI,CAACoB,WAAD,CAAzB,IAA0C,CAACpB,IAAI,CAACoB,WAAD,CAAL,EAAoBpB,IAAI,CAACkB,YAAD,CAAxB,CAA1C;AACH,KAVkB,CAWnB;;;AACA,WAAOlB,IAAP;AAEH;;AAED,WAASwB,eAAT,CAAyBxB,IAAzB,EAA+B;AAC3B,QAAIK,cAAc,GAAGL,IAAI,CAACyB,MAAL,CAAY,CAAZ,EAAe,EAAf,CAArB;AACAnB,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACA,QAAIE,cAAc,GAAGP,IAArB;AACAQ,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AAEH;;AAED,QAAMmB,WAAW,GAAIC,OAAD,IAAa;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,yBAArB;;AACA,QAAIA,OAAO,KAAK,GAAhB,EAAqB;AACjB,aAAO,EAAP;AACH,KAFD,MAEO,IAAIA,OAAO,KAAK,GAAhB,EAAqB;AACxB,aAAO,EAAP;AACH,KAFM,MAEA,IAAIA,OAAO,KAAK,GAAhB,EAAqB;AACxB,aAAO,EAAP;AACH,KAFM,MAEA,IAAIA,OAAO,KAAK,GAAhB,EAAqB;AACxB,aAAO,EAAP;AACH,KAFM,MAEA;AACH,aAAOG,MAAM,CAACH,OAAD,CAAb;AACH;AACJ,GAbD;;AAeA,QAAMI,SAAS,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACtC,UAAMC,aAAa,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAtB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ;AACA,UAAME,aAAa,GAAGH,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAtB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYO,aAAZ;;AAGA,QAAKF,aAAa,CAAC,CAAD,CAAb,KAAqB,OAArB,IAAgCE,aAAa,CAAC,CAAD,CAAb,KAAqB,OAA1D,EAAoE;AAChE;AACA;AACA,UAAIN,MAAM,CAACI,aAAa,CAAC,CAAD,CAAd,CAAN,GAA2BJ,MAAM,CAACM,aAAa,CAAC,CAAD,CAAd,CAArC,EAAyD;AACrDC,QAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiC,CAAjC;AACAC,QAAAA,QAAQ,CAACC,KAAK,CAACC,YAAP,CAAR;AACAJ,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAACC,YAAtC;AACAJ,QAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8B,QAA9B;AACH,OALD,MAKO,IAAIR,MAAM,CAACI,aAAa,CAAC,CAAD,CAAd,CAAN,GAA2BJ,MAAM,CAACM,aAAa,CAAC,CAAD,CAAd,CAArC,EAAyD;AAC5DC,QAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiC,CAAjC;AACAC,QAAAA,QAAQ,CAACC,KAAK,CAACC,YAAP,CAAR;AACAJ,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAACC,YAAtC;AACAJ,QAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8B,QAA9B;AACH,OALM,MAKA;AACHC,QAAAA,QAAQ,CAACC,KAAK,CAACE,GAAP,CAAR;AACAL,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAACE,GAAtC;AACAL,QAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8B,KAA9B;AAEH;AACJ,KAnBD,MAmBO,IAAI,EAAEJ,aAAa,CAAC,CAAD,CAAb,KAAqB,OAArB,IAAgCE,aAAa,CAAC,CAAD,CAAb,KAAqB,OAAvD,CAAJ,EAAqE;AACxE;AACA,YAAMO,WAAW,GAAGT,aAAa,CAAC,CAAD,CAAjC;AACA,YAAMU,WAAW,GAAGR,aAAa,CAAC,CAAD,CAAjC;AACA,YAAMS,OAAO,GAAGnB,WAAW,CAACiB,WAAD,CAA3B;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYgB,OAAZ,EAAqB,0BAArB;AACA,YAAMC,OAAO,GAAGpB,WAAW,CAACkB,WAAD,CAA3B;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,OAAZ,EAAqB,0BAArB;;AAEA,UAAID,OAAO,GAAGC,OAAd,EAAuB;AACnBT,QAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiC,CAAjC;AACAC,QAAAA,QAAQ,CAACC,KAAK,CAACC,YAAP,CAAR;AACAJ,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAACC,YAAtC;AACAJ,QAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8B,QAA9B;AAGH,OAPD,MAOO,IAAIO,OAAO,GAAGC,OAAd,EAAuB;AAC1BT,QAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiC,CAAjC;AACAC,QAAAA,QAAQ,CAACC,KAAK,CAACC,YAAP,CAAR;AACAJ,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAACC,YAAtC;AACAJ,QAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8B,QAA9B;AAEH,OANM,MAMA;AACHC,QAAAA,QAAQ,CAACC,KAAK,CAACE,GAAP,CAAR;AACAL,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAACE,GAAtC;AACAL,QAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8B,KAA9B;AACH;AACJ;AAGJ,GAxDD;;AA0DA,WAASS,MAAT,CAAgBC,UAAhB,EAA4BC,UAA5B,EAAwC;AACpC,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,QAAIL,UAAU,CAACM,IAAX,KAAoB,OAApB,IAA+BL,UAAU,CAACK,IAAX,KAAoB,OAAvD,EAAgE;AAC5D,UAAIC,eAAe,GAAG7C,QAAQ,CAACwC,GAAD,CAA9B;AACA,UAAIM,eAAe,GAAG9C,QAAQ,CAACyC,GAAD,CAA9B;AACA,UAAIM,iBAAiB,GAAG/C,QAAQ,CAAC0C,GAAD,CAAhC;AAEA,UAAIM,eAAe,GAAG7C,QAAQ,CAACqC,GAAD,CAA9B;AACA,UAAIS,eAAe,GAAG9C,QAAQ,CAACsC,GAAD,CAA9B;AACA,UAAIS,iBAAiB,GAAG/C,QAAQ,CAACuC,GAAD,CAAhC;AAEAC,MAAAA,QAAQ,CAACQ,IAAT,CAAcN,eAAd;AACAF,MAAAA,QAAQ,CAACQ,IAAT,CAAcL,eAAd;AACAH,MAAAA,QAAQ,CAACQ,IAAT,CAAcJ,iBAAd;AACAJ,MAAAA,QAAQ,CAACQ,IAAT,CAAcb,UAAd;AAEAK,MAAAA,QAAQ,CAACQ,IAAT,CAAcH,eAAd;AACAL,MAAAA,QAAQ,CAACQ,IAAT,CAAcF,eAAd;AACAN,MAAAA,QAAQ,CAACQ,IAAT,CAAcD,iBAAd;AACAP,MAAAA,QAAQ,CAACQ,IAAT,CAAcZ,UAAd,EAjB4D,CAkB5D;;AAEA,UAAInB,MAAM,CAACkB,UAAU,CAACc,MAAZ,CAAN,GAA4BhC,MAAM,CAACmB,UAAU,CAACa,MAAZ,CAAtC,EAA2D;AACvDzB,QAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiC,CAAjC;AACH,OAFD,MAEO;AACHD,QAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiC,CAAjC;AACH;AAEJ,KA1BD,MA0BO;AACH,UAAIiB,eAAe,GAAG7C,QAAQ,CAACwC,GAAD,CAA9B;AACA,UAAIM,eAAe,GAAG9C,QAAQ,CAACyC,GAAD,CAA9B;AACA,UAAIM,iBAAiB,GAAG/C,QAAQ,CAAC0C,GAAD,CAAhC;AAEAC,MAAAA,QAAQ,CAACQ,IAAT,CAAcN,eAAd;AACAF,MAAAA,QAAQ,CAACQ,IAAT,CAAcL,eAAd;AACAH,MAAAA,QAAQ,CAACQ,IAAT,CAAcJ,iBAAd;AACAJ,MAAAA,QAAQ,CAACQ,IAAT,CAAcb,UAAd;AAEA,UAAIU,eAAe,GAAG7C,QAAQ,CAACqC,GAAD,CAA9B;AACA,UAAIS,eAAe,GAAG9C,QAAQ,CAACsC,GAAD,CAA9B;AACA,UAAIS,iBAAiB,GAAG/C,QAAQ,CAACuC,GAAD,CAAhC;AAEAC,MAAAA,QAAQ,CAACQ,IAAT,CAAcH,eAAd;AACAL,MAAAA,QAAQ,CAACQ,IAAT,CAAcF,eAAd;AACAN,MAAAA,QAAQ,CAACQ,IAAT,CAAcD,iBAAd;AACAP,MAAAA,QAAQ,CAACQ,IAAT,CAAcZ,UAAd,EAjBG,CAkBH;;AAEA,UAAIc,SAAS,GAAGrC,WAAW,CAACsB,UAAU,CAACc,MAAZ,CAA3B;AACA,UAAIE,SAAS,GAAGtC,WAAW,CAACuB,UAAU,CAACa,MAAZ,CAA3B;;AACA,UAAIC,SAAS,GAAGC,SAAhB,EAA2B;AACvB3B,QAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiC,CAAjC;AACH,OAFD,MAEO;AACHD,QAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiC,CAAjC;AACH;AAEJ;;AACD,WAAOe,QAAP;AACH;;AAED,QAAMY,iBAAiB,GAAIC,KAAD,IAAW;AACjC,QAAIA,KAAK,CAAC/C,MAAN,GAAe,EAAnB,EAAuB;AACnB,aAAO,CAAP;AACH,KAFD,MAEO,IAAI+C,KAAK,CAAC/C,MAAN,GAAe,EAAnB,EAAuB;AAC1B,aAAO,CAAP;AACH,KAFM,MAEA,IAAI+C,KAAK,CAAC/C,MAAN,GAAe,EAAnB,EAAuB;AAC1B,aAAO,CAAP;AACH,KAFM,MAEA,IAAI+C,KAAK,CAAC/C,MAAN,GAAe,EAAnB,EAAuB;AAC1B,aAAO,CAAP;AACH,KAFM,MAEA,IAAI+C,KAAK,CAAC/C,MAAN,GAAe,EAAnB,EAAuB;AAC1B,aAAO,CAAP;AACH;AACJ,GAZD;;AAeA,QAAMqB,KAAK,GAAG;AACV2B,IAAAA,IAAI,EAAE,MADI;AAEVC,IAAAA,WAAW,EAAE,aAFH;AAGV1B,IAAAA,GAAG,EAAE,KAHK;AAIVD,IAAAA,YAAY,EAAE,cAJJ;AAKV4B,IAAAA,GAAG,EAAE;AALK,GAAd;AAQA,QAAMC,YAAY,GAAGjC,cAAc,CAACkC,OAAf,CAAuB,OAAvB,CAArB;AACA,QAAM,CAACC,KAAD,EAAQjC,QAAR,IAAoBhD,QAAQ,CAAC+E,YAAY,GAAGA,YAAH,GAAkB,IAA/B,CAAlC;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCnF,QAAQ,EAAhD;AACA,QAAM,CAACoF,YAAD,EAAeC,eAAf,IAAkCrF,QAAQ,EAAhD;AACA,QAAM,CAACsF,cAAD,EAAiBC,iBAAjB,IAAsCvF,QAAQ,EAApD;AACA,QAAM,CAACwF,cAAD,EAAiBC,iBAAjB,IAAsCzF,QAAQ,EAApD;AACA,QAAM,CAAC0F,cAAD,EAAiBC,iBAAjB,IAAsC3F,QAAQ,EAApD;AACA,QAAM,CAAC4F,cAAD,EAAiBC,iBAAjB,IAAsC7F,QAAQ,EAApD,CAhNgB,CAkNhB;;AAGA,MAAI8F,cAAc,GAAG,IAArB;AAGA/F,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMa,YAAY,GAAGc,OAAO,CAACjB,IAAD,CAA5B;AACAI,IAAAA,eAAe,CAACD,YAAD,CAAf;AACAqB,IAAAA,eAAe,CAACrB,YAAD,CAAf;AAEA,UAAMM,QAAQ,CAACf,WAAW,CAAC4F,gBAAZ,EAAD,CAAd;AACA,UAAM7E,QAAQ,CAACf,WAAW,CAAC6F,MAAZ,EAAD,CAAd;;AAEA,QAAIf,KAAJ,EAAW;AACPxD,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAFD,MAEO;AACHA,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH;;AAKDY,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,YAAQ2C,KAAR;AACI,WAAKhC,KAAK,CAAC2B,IAAX;AACIvC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,YAAI2D,qBAAqB,GAAGvB,iBAAiB,CAACvD,QAAD,CAA7C;AACAwE,QAAAA,iBAAiB,CAACM,qBAAD,CAAjB;AAEA,YAAIC,qBAAqB,GAAGxB,iBAAiB,CAACpD,QAAD,CAA7C;AACAuE,QAAAA,iBAAiB,CAACK,qBAAD,CAAjB;AAIA,cAAMC,QAAQ,GAAGhF,QAAQ,CAACiF,KAAT,EAAjB;AACA/D,QAAAA,OAAO,CAACC,GAAR,CAAY6D,QAAZ,EAAsB,WAAtB;AACA,cAAME,QAAQ,GAAG/E,QAAQ,CAAC8E,KAAT,EAAjB;AACA/D,QAAAA,OAAO,CAACC,GAAR,CAAY+D,QAAZ,EAAsB,WAAtB;;AAGA,YAAI,CAAClF,QAAQ,CAACS,MAAV,IAAoB,CAACN,QAAQ,CAACM,MAAlC,EAA0C;AACtC,gBAAM0E,OAAO,GAAGC,UAAU,CAAC,YAAY;AAEnC,gBAAIpF,QAAQ,CAACS,MAAT,GAAkBN,QAAQ,CAACM,MAA/B,EAAuC;AACnCkB,cAAAA,cAAc,CAACC,OAAf,CAAuB,aAAvB,EAAsC,CAAtC;AAEH,aAHD,MAGO;AACHD,cAAAA,cAAc,CAACC,OAAf,CAAuB,aAAvB,EAAsC,CAAtC;AACH;;AACDC,YAAAA,QAAQ,CAACC,KAAK,CAAC6B,GAAP,CAAR;AACAhC,YAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAAC6B,GAAtC;AACH,WAVyB,EAUvBgB,cAVuB,CAA1B;AAWA,iBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH;;AAED,cAAMG,OAAO,GAAG,CACZN,QADY,EAEZE,QAFY,CAAhB;AAIAvD,QAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EACI,CACIoD,QADJ,aACIA,QADJ,uBACIA,QAAQ,CAAEO,WADd,EAEIP,QAFJ,aAEIA,QAFJ,uBAEIA,QAAQ,CAAE5B,MAFd,EAGI4B,QAHJ,aAGIA,QAHJ,uBAGIA,QAAQ,CAAEQ,IAHd,EAIIR,QAJJ,aAIIA,QAJJ,uBAIIA,QAAQ,CAAEpC,IAJd,CADJ;AAOAjB,QAAAA,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCoD,QAAvC,aAAuCA,QAAvC,uBAAuCA,QAAQ,CAAEQ,IAAjD;AACA7D,QAAAA,cAAc,CAACC,OAAf,CAAuB,aAAvB,EAAsCoD,QAAtC,aAAsCA,QAAtC,uBAAsCA,QAAQ,CAAE5B,MAAhD;AACAY,QAAAA,eAAe,CAACrC,cAAc,CAACkC,OAAf,CAAuB,cAAvB,CAAD,CAAf;AACAO,QAAAA,iBAAiB,CAACzC,cAAc,CAACkC,OAAf,CAAuB,aAAvB,CAAD,CAAjB;AAGAlC,QAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EACI,CACIsD,QADJ,aACIA,QADJ,uBACIA,QAAQ,CAAEK,WADd,EAEIL,QAFJ,aAEIA,QAFJ,uBAEIA,QAAQ,CAAE9B,MAFd,EAGI8B,QAHJ,aAGIA,QAHJ,uBAGIA,QAAQ,CAAEM,IAHd,EAIIN,QAJJ,aAIIA,QAJJ,uBAIIA,QAAQ,CAAEtC,IAJd,CADJ;AAOAjB,QAAAA,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuCsD,QAAvC,aAAuCA,QAAvC,uBAAuCA,QAAQ,CAAEM,IAAjD;AACA7D,QAAAA,cAAc,CAACC,OAAf,CAAuB,aAAvB,EAAsCsD,QAAtC,aAAsCA,QAAtC,uBAAsCA,QAAQ,CAAE9B,MAAhD;AACAc,QAAAA,eAAe,CAACvC,cAAc,CAACkC,OAAf,CAAuB,cAAvB,CAAD,CAAf;AACAS,QAAAA,iBAAiB,CAAC3C,cAAc,CAACkC,OAAf,CAAuB,aAAvB,CAAD,CAAjB;AAGA,cAAM9D,QAAQ,CAACf,WAAW,CAACyG,QAAZ,CAAqB;AAAEC,UAAAA,UAAU,EAAEJ;AAAd,SAArB,CAAD,CAAd;AACA,cAAMH,OAAO,GAAGC,UAAU,CAAC,YAAY;AACnCvD,UAAAA,QAAQ,CAACC,KAAK,CAAC4B,WAAP,CAAR;AACA/B,UAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAAC4B,WAAtC;AACH,SAHyB,EAGvBiB,cAHuB,CAA1B;AAKA,eAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;;AAEJ,WAAKrD,KAAK,CAAC4B,WAAX;AACIxC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,cAAMG,QAAQ,GAAGK,cAAc,CAACkC,OAAf,CAAuB,UAAvB,CAAjB;AACA,cAAMtC,QAAQ,GAAGI,cAAc,CAACkC,OAAf,CAAuB,UAAvB,CAAjB;;AACA,YAAIvC,QAAQ,IAAIC,QAAhB,EAA0B;AACtB,gBAAM4D,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7B/D,YAAAA,SAAS,CAACC,QAAD,EAAWC,QAAX,CAAT;AACH,WAFyB,EAEvBoD,cAFuB,CAA1B;AAIA,iBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH;;AACD;;AACJ,WAAKrD,KAAK,CAACE,GAAX;AACId,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EADJ,CAGI;;AACA,YAAIwE,MAAM,GAAG,CAAb;AACA,YAAIrD,UAAU,GAAGtC,QAAQ,CAAC2F,MAAD,CAAzB;AACAzE,QAAAA,OAAO,CAACC,GAAR,CAAYmB,UAAZ,EAAwB,2BAAxB;AACA,YAAIC,UAAU,GAAGpC,QAAQ,CAACwF,MAAD,CAAzB;AACAzE,QAAAA,OAAO,CAACC,GAAR,CAAYoB,UAAZ,EAAwB,2BAAxB;;AAEA,YAAI,CAACA,UAAD,IAAe,CAACD,UAApB,EAAgC;AAC5B,gBAAM6C,OAAO,GAAGC,UAAU,CAAC,YAAY;AACnCvD,YAAAA,QAAQ,CAACC,KAAK,CAAC6B,GAAP,CAAR;AACAhC,YAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAAC6B,GAAtC;AACH,WAHyB,EAGvBgB,cAHuB,CAA1B;AAIA,iBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH;;AAED,YAAI7C,UAAU,KAAKC,UAAnB,EAA+B;AAC3B,gBAAMI,QAAQ,GAAGN,MAAM,CAACC,UAAD,EAAaC,UAAb,CAAvB;AACArB,UAAAA,OAAO,CAACC,GAAR,CAAYwB,QAAZ,EAAsB,mCAAtB;AACA5C,UAAAA,QAAQ,CAACf,WAAW,CAACyG,QAAZ,CAAqB;AAAEC,YAAAA,UAAU,EAAE/C;AAAd,WAArB,CAAD,CAAR;AACA,gBAAMwC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BzD,YAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAACC,YAAtC;AACAF,YAAAA,QAAQ,CAACC,KAAK,CAACC,YAAP,CAAR;AACH,WAHyB,EAGvB4C,cAHuB,CAA1B;AAIA,iBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH,SA3BL,CA4BI;;;AACA,YAAI3C,GAAG,GAAG,CAAV;AACA,YAAIC,GAAG,GAAG,CAAV;AACA,YAAIC,GAAG,GAAG,CAAV;AAEA,YAAIC,QAAQ,GAAG,EAAf;;AAEA,eAAOL,UAAU,KAAKC,UAAtB,EAAkC;AAE9B,cAAIM,eAAe,GAAG7C,QAAQ,CAACwC,GAAD,CAA9B;AACA,cAAIM,eAAe,GAAG9C,QAAQ,CAACyC,GAAD,CAA9B;AACA,cAAIM,iBAAiB,GAAG/C,QAAQ,CAAC0C,GAAD,CAAhC;AAEAC,UAAAA,QAAQ,CAACQ,IAAT,CAAcN,eAAd;AACAF,UAAAA,QAAQ,CAACQ,IAAT,CAAcL,eAAd;AACAH,UAAAA,QAAQ,CAACQ,IAAT,CAAcJ,iBAAd;AACAJ,UAAAA,QAAQ,CAACQ,IAAT,CAAcb,UAAd;AAEA,cAAIU,eAAe,GAAG7C,QAAQ,CAACqC,GAAD,CAA9B;AACA,cAAIS,eAAe,GAAG9C,QAAQ,CAACsC,GAAD,CAA9B;AACA,cAAIS,iBAAiB,GAAG/C,QAAQ,CAACuC,GAAD,CAAhC;AAEAC,UAAAA,QAAQ,CAACQ,IAAT,CAAcH,eAAd;AACAL,UAAAA,QAAQ,CAACQ,IAAT,CAAcF,eAAd;AACAN,UAAAA,QAAQ,CAACQ,IAAT,CAAcD,iBAAd;AACAP,UAAAA,QAAQ,CAACQ,IAAT,CAAcZ,UAAd;AACArB,UAAAA,OAAO,CAACC,GAAR,CAAYwB,QAAZ,EAAsB,+BAAtB;AAEAgD,UAAAA,MAAM,IAAIA,MAAV;AACAnD,UAAAA,GAAG,IAAImD,MAAP;AACAlD,UAAAA,GAAG,IAAIkD,MAAP;AACAjD,UAAAA,GAAG,IAAIiD,MAAP;AAEH;;AACDzE,QAAAA,OAAO,CAACC,GAAR,CAAYwB,QAAZ,EAAsB,iBAAtB;AAEA,YAAIU,SAAS,GAAGrC,WAAW,CAACsB,UAAU,CAACc,MAAZ,CAA3B;AACA,YAAIE,SAAS,GAAGtC,WAAW,CAACuB,UAAU,CAACa,MAAZ,CAA3B;;AAEA,YAAIT,QAAJ,EAAc;AACV,cAAIU,SAAS,GAAGC,SAAhB,EAA2B;AACvB3B,YAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiC,CAAjC;AACA7B,YAAAA,QAAQ,CAACf,WAAW,CAACyG,QAAZ,CAAqB;AAAEC,cAAAA,UAAU,EAAE/C;AAAd,aAArB,CAAD,CAAR;AACA,kBAAMwC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BzD,cAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8B,KAA9B;AACAD,cAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAACC,YAAtC;AACAF,cAAAA,QAAQ,CAACC,KAAK,CAACC,YAAP,CAAR;AACH,aAJyB,EAIvB4C,cAJuB,CAA1B;AAKA,mBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH,WATD,MASO;AACHxD,YAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiC,CAAjC;AACA7B,YAAAA,QAAQ,CAACf,WAAW,CAACyG,QAAZ,CAAqB;AAAEC,cAAAA,UAAU,EAAE/C;AAAd,aAArB,CAAD,CAAR;AACA,kBAAMwC,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BzD,cAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8B,KAA9B;AACAD,cAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAACC,YAAtC;AACAF,cAAAA,QAAQ,CAACC,KAAK,CAACC,YAAP,CAAR;AACH,aAJyB,EAIvB4C,cAJuB,CAA1B;AAKA,mBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH;AAEJ;;AAED;;AACJ,WAAKrD,KAAK,CAACC,YAAX;AACIb,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EADJ,CAEI;AACA;;AACA,cAAMyE,MAAM,GAAGjE,cAAc,CAACkC,OAAf,CAAuB,QAAvB,CAAf;AACA,cAAMgC,GAAG,GAAGlE,cAAc,CAACkC,OAAf,CAAuB,KAAvB,CAAZ;;AAEA,YAAIgC,GAAG,KAAK,QAAZ,EAAsB;AAClB3E,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,cAAIC,MAAM,CAACwE,MAAD,CAAN,KAAmB,CAAvB,EAA0B;AACtB1E,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,kBAAM2E,IAAI,GAAG,MAAM/F,QAAQ,CAACf,WAAW,CAAC+G,8BAAZ,CAA2C;AAAEH,cAAAA,MAAM,EAAExE,MAAM,CAACwE,MAAD;AAAhB,aAA3C,CAAD,CAA3B;;AACA,gBAAIE,IAAJ,EAAU;AACN,oBAAMX,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BvD,gBAAAA,QAAQ,CAACC,KAAK,CAAC2B,IAAP,CAAR;AACA9B,gBAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAAC2B,IAAtC;AACH,eAHyB,EAGvBkB,cAHuB,CAA1B;AAIA,qBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH;AACJ;;AACD,cAAI/D,MAAM,CAACwE,MAAD,CAAN,KAAmB,CAAvB,EAA0B;AACtB1E,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,kBAAM2E,IAAI,GAAG,MAAM/F,QAAQ,CAACf,WAAW,CAAC+G,8BAAZ,CAA2C;AAAEH,cAAAA,MAAM,EAAExE,MAAM,CAACwE,MAAD;AAAhB,aAA3C,CAAD,CAA3B;;AACA,gBAAIE,IAAJ,EAAU;AACN,oBAAMX,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BvD,gBAAAA,QAAQ,CAACC,KAAK,CAAC2B,IAAP,CAAR;AACA9B,gBAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAAC2B,IAAtC;AACH,eAHyB,EAGvBkB,cAHuB,CAA1B;AAIA,qBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH;AACJ;AACJ,SAxBD,MAwBO;AACHjE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,cAAIC,MAAM,CAACwE,MAAD,CAAN,KAAmB,CAAvB,EAA0B;AACtB1E,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,kBAAM2E,IAAI,GAAG,MAAM/F,QAAQ,CAACf,WAAW,CAAC+G,8BAAZ,CAA2C;AAAEH,cAAAA,MAAM,EAAExE,MAAM,CAACwE,MAAD;AAAhB,aAA3C,CAAD,CAA3B;;AACA,gBAAIE,IAAJ,EAAU;AACN,oBAAMX,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BvD,gBAAAA,QAAQ,CAACC,KAAK,CAAC2B,IAAP,CAAR;AACA9B,gBAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAAC2B,IAAtC;AACH,eAHyB,EAGvBkB,cAHuB,CAA1B;AAIA,qBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH;AACJ;;AACD,cAAI/D,MAAM,CAACwE,MAAD,CAAN,KAAmB,CAAvB,EAA0B;AACtB1E,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,kBAAM2E,IAAI,GAAG,MAAM/F,QAAQ,CAACf,WAAW,CAAC+G,8BAAZ,CAA2C;AAAEH,cAAAA,MAAM,EAAExE,MAAM,CAACwE,MAAD;AAAhB,aAA3C,CAAD,CAA3B;;AACA,gBAAIE,IAAJ,EAAU;AACN,oBAAMX,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BvD,gBAAAA,QAAQ,CAACC,KAAK,CAAC2B,IAAP,CAAR;AACA9B,gBAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAAC2B,IAAtC;AACH,eAHyB,EAGvBkB,cAHuB,CAA1B;AAIA,qBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH;AACJ;AACJ;;AACD;;AACJ,WAAKrD,KAAK,CAAC6B,GAAX;AACIzC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,cAAM6E,WAAW,GAAGrE,cAAc,CAACkC,OAAf,CAAuB,aAAvB,CAApB;AACA,cAAMiC,IAAI,GAAG,MAAM/F,QAAQ,CAACf,WAAW,CAACiH,aAAZ,CAA0B;AAAEL,UAAAA,MAAM,EAAEI;AAAV,SAA1B,CAAD,CAA3B;;AACA,YAAIF,IAAJ,EAAU;AACN,gBAAMX,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BvD,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,YAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgC,IAAhC;AACH,WAHyB,EAGvB+C,cAHuB,CAA1B;AAIA,iBAAO,MAAMU,YAAY,CAACF,OAAD,CAAzB;AACH;;AACD;AAjPR;AAoPH,GAtQQ,EAsQN,CAACpF,QAAD,EAAWM,cAAX,EAA2ByD,KAA3B,CAtQM,CAAT;AAwQA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA,8CAC4B9D,QAD5B,aAC4BA,QAD5B,uBAC4BA,QAAQ,CAAES,MADtC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAG,QAAA,SAAS,EAAC,wBAAb;AAAA,8CAC4BN,QAD5B,aAC4BA,QAD5B,uBAC4BA,QAAQ,CAAEM,MADtC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,mBACK8D,cAAc,KAAK,CAAnB,iBAAwB;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAD7B,EAEKA,cAAc,KAAK,CAAnB,iBAAwB;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAF7B,EAGKA,cAAc,KAAK,CAAnB,iBAAwB;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAH7B,EAIK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA5C,kBAAkD;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJvD,EAKK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA5C,kBAAkD;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBALvD,EAMK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA5C,kBAAkD;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBANvD,EAOK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAApE,kBAA0E;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAP/E,EAQK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAApE,kBAA0E;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAR/E,EASK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAApE,kBAA0E;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAT/E,EAUK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA5F,kBAAkG;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAVvG,EAWK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA5F,kBAAkG;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAXvG,EAYK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA5F,kBAAkG;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAZvG,EAaK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA3F,IAAgGA,cAAc,KAAK,CAApH,kBAA0H;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAb/H,EAcK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA3F,IAAgGA,cAAc,KAAK,CAApH,kBAA0H;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAd/H,EAeK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA3F,IAAgGA,cAAc,KAAK,CAApH,kBAA0H;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAf/H;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAkBI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,mBACKlE,cAAc,iBAAI;AAAI,UAAA,SAAS,EAAC,eAAd;AACf,UAAA,OAAO,EAAE,YAAY;AACjB,kBAAMyF,IAAI,GAAG,MAAM/F,QAAQ,CAACf,WAAW,CAACkH,kBAAZ,CAA+B;AAAEhG,cAAAA,aAAa,EAAEP,cAAjB;AAAiCS,cAAAA,aAAa,EAAEP;AAAhD,aAA/B,CAAD,CAA3B;;AACA,gBAAIiG,IAAJ,EAAU;AACNxF,cAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAqB,cAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCE,KAAK,CAAC2B,IAAtC;AACA5B,cAAAA,QAAQ,CAACC,KAAK,CAAC2B,IAAP,CAAR;AACH;AACJ,WARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADvB,EAaK,CAACpD,cAAD,iBACG;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAG,YAAA,SAAS,EAAG,uBAAsByD,KAAK,KAAKhC,KAAK,CAACE,GAAhB,IAAuB,KAAM,EAAlE;AAAA,sBACK8B;AADL;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdR;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eA4CI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,mBACKW,cAAc,KAAK,CAAnB,iBAAwB;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAD7B,EAEKA,cAAc,KAAK,CAAnB,iBAAwB;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAF7B,EAGKA,cAAc,KAAK,CAAnB,iBAAwB;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAH7B,EAIK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA5C,kBAAkD;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJvD,EAKK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA5C,kBAAkD;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBALvD,EAMK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA5C,kBAAkD;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBANvD,EAOK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAApE,kBAA0E;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAP/E,EAQK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAApE,kBAA0E;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAR/E,EASK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAApE,kBAA0E;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAT/E,EAUK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA5F,kBAAkG;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAVvG,EAWK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA5F,kBAAkG;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAXvG,EAYK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA5F,kBAAkG;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAZvG,EAaK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA3F,IAAgGA,cAAc,KAAK,CAApH,kBAA0H;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAb/H,EAcK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA3F,IAAgGA,cAAc,KAAK,CAApH,kBAA0H;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAd/H,EAeK,CAACA,cAAc,KAAK,CAAnB,IAAwBA,cAAc,KAAK,CAA3C,IAAgDA,cAAc,KAAK,CAAnE,IAAwEA,cAAc,KAAK,CAA3F,IAAgGA,cAAc,KAAK,CAApH,kBAA0H;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAf/H;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAuEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,mBACKX,KAAK,KAAKhC,KAAK,CAACE,GAAhB,iBACG;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAE3C,QAAV;AAAoB,cAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEA,QAAV;AAAoB,cAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEA,QAAV;AAAoB,cAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,eAcI;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,UAAd;AAAA,wBAA0B8E;AAA1B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,GAAG,EAAE,CAACJ,YAAY,KAAK,MAAjB,GAA0B9E,IAA1B,GAAiCkH,SAAlC,MAAiDpC,YAAY,KAAK,OAAjB,GAA2B5E,KAA3B,GAAmCgH,SAApF,MAAmGpC,YAAY,KAAK,SAAjB,GAA6B3E,OAA7B,GAAuC+G,SAA1I,MAAyJpC,YAAY,KAAK,OAAjB,GAA2B7E,KAA3B,GAAmCiH,SAA5L,CAAV;AAAkN,cAAA,SAAS,EAAC;AAA5N;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAE,CAACpC,YAAY,KAAK,MAAjB,GAA0B9E,IAA1B,GAAiCkH,SAAlC,MAAiDpC,YAAY,KAAK,OAAjB,GAA2B5E,KAA3B,GAAmCgH,SAApF,MAAmGpC,YAAY,KAAK,SAAjB,GAA6B3E,OAA7B,GAAuC+G,SAA1I,MAAyJpC,YAAY,KAAK,OAAjB,GAA2B7E,KAA3B,GAAmCiH,SAA5L,CAAV;AAAkN,cAAA,SAAS,EAAC;AAA5N;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ,eAQI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,oCACI;AAAK,cAAA,GAAG,EAAE,CAACpC,YAAY,KAAK,MAAjB,GAA0B9E,IAA1B,GAAiCkH,SAAlC,MAAiDpC,YAAY,KAAK,OAAjB,GAA2B5E,KAA3B,GAAmCgH,SAApF,MAAmGpC,YAAY,KAAK,SAAjB,GAA6B3E,OAA7B,GAAuC+G,SAA1I,MAAyJpC,YAAY,KAAK,OAAjB,GAA2B7E,KAA3B,GAAmCiH,SAA5L,CAAV;AAAkN,cAAA,SAAS,EAAC;AAA5N;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,UAAd;AAAA,wBAA0BhC;AAA1B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA6BI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,UAAd;AAAA,wBAA2BE;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,GAAG,EAAE,CAACJ,YAAY,KAAK,MAAjB,GAA0BhF,IAA1B,GAAiCkH,SAAlC,MAAiDlC,YAAY,KAAK,OAAjB,GAA2B9E,KAA3B,GAAmCgH,SAApF,MAAmGlC,YAAY,KAAK,SAAjB,GAA6B7E,OAA7B,GAAuC+G,SAA1I,MAAyJlC,YAAY,KAAK,OAAjB,GAA2B/E,KAA3B,GAAmCiH,SAA5L,CAAV;AAAkN,cAAA,SAAS,EAAC;AAA5N;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAE,CAAClC,YAAY,KAAK,MAAjB,GAA0BhF,IAA1B,GAAiCkH,SAAlC,MAAiDlC,YAAY,KAAK,OAAjB,GAA2B9E,KAA3B,GAAmCgH,SAApF,MAAmGlC,YAAY,KAAK,SAAjB,GAA6B7E,OAA7B,GAAuC+G,SAA1I,MAAyJlC,YAAY,KAAK,OAAjB,GAA2B/E,KAA3B,GAAmCiH,SAA5L,CAAV;AAAkN,cAAA,SAAS,EAAC;AAA5N;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ,eAQI;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACI;AAAK,cAAA,GAAG,EAAE,CAAClC,YAAY,KAAK,MAAjB,GAA0BhF,IAA1B,GAAiCkH,SAAlC,MAAiDlC,YAAY,KAAK,OAAjB,GAA2B9E,KAA3B,GAAmCgH,SAApF,MAAmGlC,YAAY,KAAK,SAAjB,GAA6B7E,OAA7B,GAAuC+G,SAA1I,MAAyJlC,YAAY,KAAK,OAAjB,GAA2B/E,KAA3B,GAAmCiH,SAA5L,CAAV;AAAkN,cAAA,SAAS,EAAC;AAA5N;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,UAAd;AAAA,wBAA0B9B;AAA1B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAcKP,KAAK,KAAKhC,KAAK,CAACE,GAAhB,iBACG;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAE3C,QAAV;AAAoB,cAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEA,QAAV;AAAoB,cAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEA,QAAV;AAAoB,cAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfR;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoIH;;GApmBQG,Q;UAKYV,W,EAEAC,W,EAEAA,W;;;KATZS,Q;AAomBR;AAED,eAAeA,QAAf","sourcesContent":["import \"./mainpage.css\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as playerDecks from '../../store/playerdecks'\nimport club from '../images/club.png'\nimport spade from '../images/spade.jpg'\nimport heart from '../images/heart.png'\nimport diamond from '../images/diamond.jpeg'\nimport cardback from '../images/cardback.jpeg'\nconst deck = require('../../deck');\n\n\nfunction Mainpage() {\n    const [shuffledDeck, setShuffledDeck] = useState();\n    // console.log(shuffledDeck);\n    const [playerOneCards, setPlayerOneCards] = useState();\n    const [playerTwoCards, setPlayerTwoCards] = useState();\n    const dispatch = useDispatch();\n\n    const pOneDeck = useSelector(state => state.playerDecks?.playerOneDeck)\n    // console.log(pOneDeck?.length)\n    const pTwoDeck = useSelector(state => state.playerDecks?.playerTwoDeck)\n    // console.log(pTwoDeck?.length)\n\n    const [renderStartBtn, setRenderStartBtn] = useState(true)\n\n\n\n\n    function shuffle(deck) {\n        let currentIndex = deck.length;\n        let randomIndex = 0;\n\n        // O(n)\n        while (currentIndex !== 0) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex--;\n\n            [deck[currentIndex], deck[randomIndex]] = [deck[randomIndex], deck[currentIndex]]\n        }\n        // console.log(deck);\n        return deck;\n\n    }\n\n    function distributeCards(deck) {\n        let playerOneCards = deck.splice(0, 26);\n        setPlayerOneCards(playerOneCards)\n        let playerTwoCards = deck\n        setPlayerTwoCards(playerTwoCards)\n\n    }\n\n    const translateFC = (cardVal) => {\n        console.log(cardVal, \"CARD VALUE FOR FACECARD\")\n        if (cardVal === 'J') {\n            return 11;\n        } else if (cardVal === 'Q') {\n            return 12;\n        } else if (cardVal === 'K') {\n            return 13;\n        } else if (cardVal === 'A') {\n            return 14;\n        } else {\n            return Number(cardVal);\n        }\n    }\n\n    const calculate = (pOneCard, pTwoCard) => {\n        const pOneCardSplit = pOneCard.split(',')\n        console.log(pOneCardSplit)\n        const pTwoCardSplit = pTwoCard.split(',')\n        console.log(pTwoCardSplit)\n\n\n        if ((pOneCardSplit[3] === 'false' && pTwoCardSplit[3] === 'false')) {\n            //both cards are number cards\n            //compare numbers from index 1 of initial split    \n            if (Number(pOneCardSplit[1]) < Number(pTwoCardSplit[1])) {\n                sessionStorage.setItem('winner', 2)\n                setPhase(Phase.Distribution)\n                sessionStorage.setItem('phase', Phase.Distribution)\n                sessionStorage.setItem('war', 'No War')\n            } else if (Number(pOneCardSplit[1]) > Number(pTwoCardSplit[1])) {\n                sessionStorage.setItem('winner', 1)\n                setPhase(Phase.Distribution)\n                sessionStorage.setItem('phase', Phase.Distribution)\n                sessionStorage.setItem('war', 'No War')\n            } else {\n                setPhase(Phase.War)\n                sessionStorage.setItem('phase', Phase.War)\n                sessionStorage.setItem('war', 'War')\n\n            }\n        } else if (!(pOneCardSplit[3] === 'false' && pTwoCardSplit[3] === 'false')) {\n            //either both cards are not number cards or one card is not a number card\n            const pOneCardVal = pOneCardSplit[1]\n            const pTwoCardVal = pTwoCardSplit[1]\n            const pOneVal = translateFC(pOneCardVal)\n            console.log(pOneVal, \"VALUE OF PLAYER ONE CARD\")\n            const pTwoVal = translateFC(pTwoCardVal)\n            console.log(pTwoVal, \"VALUE OF PLAYER TWO CARD\")\n\n            if (pOneVal > pTwoVal) {\n                sessionStorage.setItem('winner', 1)\n                setPhase(Phase.Distribution)\n                sessionStorage.setItem('phase', Phase.Distribution)\n                sessionStorage.setItem('war', 'No War')\n\n\n            } else if (pOneVal < pTwoVal) {\n                sessionStorage.setItem('winner', 2)\n                setPhase(Phase.Distribution)\n                sessionStorage.setItem('phase', Phase.Distribution)\n                sessionStorage.setItem('war', 'No War')\n\n            } else {\n                setPhase(Phase.War)\n                sessionStorage.setItem('phase', Phase.War)\n                sessionStorage.setItem('war', 'War')\n            }\n        }\n\n\n    }\n\n    function battle(pOneFaceUp, pTwoFaceUp) {\n        let fd1 = 1\n        let fd2 = 2\n        let fd3 = 3\n        let potArray = [];\n\n        if (pOneFaceUp.face === 'false' && pTwoFaceUp.face === 'false') {\n            let pOneFaceDownOne = pOneDeck[fd1]\n            let pOneFaceDownTwo = pOneDeck[fd2]\n            let pOneFaceDownThree = pOneDeck[fd3]\n\n            let pTwoFaceDownOne = pTwoDeck[fd1]\n            let pTwoFaceDownTwo = pTwoDeck[fd2]\n            let pTwoFaceDownThree = pTwoDeck[fd3]\n\n            potArray.push(pOneFaceDownOne)\n            potArray.push(pOneFaceDownTwo)\n            potArray.push(pOneFaceDownThree)\n            potArray.push(pOneFaceUp)\n\n            potArray.push(pTwoFaceDownOne)\n            potArray.push(pTwoFaceDownTwo)\n            potArray.push(pTwoFaceDownThree)\n            potArray.push(pTwoFaceUp)\n            // console.log(potArray, \"POT ARRAY WHEN CARDS ARE NOT FCs\")\n\n            if (Number(pOneFaceUp.number) < Number(pTwoFaceUp.number)) {\n                sessionStorage.setItem('winner', 2)\n            } else {\n                sessionStorage.setItem('winner', 1)\n            }\n\n        } else {\n            let pOneFaceDownOne = pOneDeck[fd1]\n            let pOneFaceDownTwo = pOneDeck[fd2]\n            let pOneFaceDownThree = pOneDeck[fd3]\n\n            potArray.push(pOneFaceDownOne)\n            potArray.push(pOneFaceDownTwo)\n            potArray.push(pOneFaceDownThree)\n            potArray.push(pOneFaceUp)\n\n            let pTwoFaceDownOne = pTwoDeck[fd1]\n            let pTwoFaceDownTwo = pTwoDeck[fd2]\n            let pTwoFaceDownThree = pTwoDeck[fd3]\n\n            potArray.push(pTwoFaceDownOne)\n            potArray.push(pTwoFaceDownTwo)\n            potArray.push(pTwoFaceDownThree)\n            potArray.push(pTwoFaceUp)\n            // console.log(potArray, \"POT ARRAY WHEN ATLEAST ONE CARD IS FC\")\n\n            let pOneFUVal = translateFC(pOneFaceUp.number)\n            let pTwoFUVal = translateFC(pTwoFaceUp.number)\n            if (pOneFUVal > pTwoFUVal) {\n                sessionStorage.setItem('winner', 1)\n            } else {\n                sessionStorage.setItem('winner', 2)\n            }\n\n        }\n        return potArray;\n    }\n\n    const amtCardsDisplayed = (array) => {\n        if (array.length < 10) {\n            return 0;\n        } else if (array.length < 10) {\n            return 1;\n        } else if (array.length < 20) {\n            return 2;\n        } else if (array.length < 35) {\n            return 3;\n        } else if (array.length < 53) {\n            return 4;\n        }\n    }\n\n\n    const Phase = {\n        Draw: 'Draw',\n        Calculation: 'Calculation',\n        War: 'War',\n        Distribution: 'Distribution',\n        End: 'End',\n    }\n\n    const currentPhase = sessionStorage.getItem('phase')\n    const [phase, setPhase] = useState(currentPhase ? currentPhase : null)\n    const [pOneCardSuit, setPOneCardSuit] = useState();\n    const [pTwoCardSuit, setPTwoCardSuit] = useState();\n    const [pOneCardNumber, setPOneCardNumber] = useState();\n    const [pTwoCardNumber, setPTwoCardNumber] = useState();\n    const [pOneDeckHeight, setPOneDeckHeight] = useState();\n    const [pTwoDeckHeight, setPTwoDeckHeight] = useState();\n\n    // console.log(phase, \"CURRENT PHASE\")\n\n\n    let OPERATIONSPEED = 2500;\n\n\n    useEffect(async () => {\n        const shuffledDeck = shuffle(deck)\n        setShuffledDeck(shuffledDeck)\n        distributeCards(shuffledDeck)\n\n        await dispatch(playerDecks.get_player_decks())\n        await dispatch(playerDecks.getPot())\n\n        if (phase) {\n            setRenderStartBtn(false)\n        } else {\n            setRenderStartBtn(true)\n        }\n\n\n\n\n        console.log(\"RERENDER\")\n        switch (phase) {\n            case Phase.Draw:\n                console.log(\"REACHED DRAW PHASE\")\n                let numPOneCardsToDisplay = amtCardsDisplayed(pOneDeck)\n                setPOneDeckHeight(numPOneCardsToDisplay)\n\n                let numPTwoCardsToDisplay = amtCardsDisplayed(pTwoDeck)\n                setPTwoDeckHeight(numPTwoCardsToDisplay)\n\n\n\n                const pOneDraw = pOneDeck.shift()\n                console.log(pOneDraw, \"PONE DRAW\")\n                const pTwoDraw = pTwoDeck.shift()\n                console.log(pTwoDraw, \"PTWO DRAW\")\n\n\n                if (!pOneDeck.length || !pTwoDeck.length) {\n                    const timeout = setTimeout(async () => {\n\n                        if (pOneDeck.length > pTwoDeck.length) {\n                            sessionStorage.setItem('FinalWinner', 1)\n\n                        } else {\n                            sessionStorage.setItem('FinalWinner', 2)\n                        }\n                        setPhase(Phase.End)\n                        sessionStorage.setItem('phase', Phase.End)\n                    }, OPERATIONSPEED)\n                    return () => clearTimeout(timeout)\n                }\n\n                const payload = [\n                    pOneDraw,\n                    pTwoDraw\n                ]\n                sessionStorage.setItem(\"pOneDraw\",\n                    [\n                        pOneDraw?.association,\n                        pOneDraw?.number,\n                        pOneDraw?.suit,\n                        pOneDraw?.face\n                    ])\n                sessionStorage.setItem(\"pOneCardSuit\", pOneDraw?.suit)\n                sessionStorage.setItem(\"pOneCardNum\", pOneDraw?.number)\n                setPOneCardSuit(sessionStorage.getItem(\"pOneCardSuit\"))\n                setPOneCardNumber(sessionStorage.getItem(\"pOneCardNum\"))\n\n\n                sessionStorage.setItem(\"pTwoDraw\",\n                    [\n                        pTwoDraw?.association,\n                        pTwoDraw?.number,\n                        pTwoDraw?.suit,\n                        pTwoDraw?.face\n                    ])\n                sessionStorage.setItem(\"pTwoCardSuit\", pTwoDraw?.suit)\n                sessionStorage.setItem(\"pTwoCardNum\", pTwoDraw?.number)\n                setPTwoCardSuit(sessionStorage.getItem(\"pTwoCardSuit\"))\n                setPTwoCardNumber(sessionStorage.getItem(\"pTwoCardNum\"))\n\n\n                await dispatch(playerDecks.addToPot({ drawnCards: payload }))\n                const timeout = setTimeout(async () => {\n                    setPhase(Phase.Calculation)\n                    sessionStorage.setItem('phase', Phase.Calculation)\n                }, OPERATIONSPEED)\n\n                return () => clearTimeout(timeout)\n\n            case Phase.Calculation:\n                console.log(\"REACHED CALCULATION PHASE\")\n                const pOneCard = sessionStorage.getItem(\"pOneDraw\")\n                const pTwoCard = sessionStorage.getItem(\"pTwoDraw\")\n                if (pOneCard && pTwoCard) {\n                    const timeout = setTimeout(() => {\n                        calculate(pOneCard, pTwoCard)\n                    }, OPERATIONSPEED)\n\n                    return () => clearTimeout(timeout)\n                }\n                return;\n            case Phase.War:\n                console.log(\"REACHED WAR PHASE\")\n\n                //getting 5th card at index 4\n                let new_fu = 4\n                let pOneFaceUp = pOneDeck[new_fu]\n                console.log(pOneFaceUp, \"CURRENT FACEUP PLAYER ONE\")\n                let pTwoFaceUp = pTwoDeck[new_fu]\n                console.log(pTwoFaceUp, \"CURRENT FACEUP PLAYER TWO\")\n\n                if (!pTwoFaceUp || !pOneFaceUp) {\n                    const timeout = setTimeout(async () => {\n                        setPhase(Phase.End)\n                        sessionStorage.setItem('phase', Phase.End)\n                    }, OPERATIONSPEED)\n                    return () => clearTimeout(timeout)\n                }\n\n                if (pOneFaceUp !== pTwoFaceUp) {\n                    const potArray = battle(pOneFaceUp, pTwoFaceUp)\n                    console.log(potArray, \"FINAL POT ARRAY WHEN SOMEONE WINS\")\n                    dispatch(playerDecks.addToPot({ drawnCards: potArray }))\n                    const timeout = setTimeout(() => {\n                        sessionStorage.setItem('phase', Phase.Distribution)\n                        setPhase(Phase.Distribution)\n                    }, OPERATIONSPEED)\n                    return () => clearTimeout(timeout)\n                }\n                //getting all facedown cards after cards already held in pot\n                let fd1 = 1\n                let fd2 = 2\n                let fd3 = 3\n\n                let potArray = [];\n\n                while (pOneFaceUp === pTwoFaceUp) {\n\n                    let pOneFaceDownOne = pOneDeck[fd1]\n                    let pOneFaceDownTwo = pOneDeck[fd2]\n                    let pOneFaceDownThree = pOneDeck[fd3]\n\n                    potArray.push(pOneFaceDownOne)\n                    potArray.push(pOneFaceDownTwo)\n                    potArray.push(pOneFaceDownThree)\n                    potArray.push(pOneFaceUp)\n\n                    let pTwoFaceDownOne = pTwoDeck[fd1]\n                    let pTwoFaceDownTwo = pTwoDeck[fd2]\n                    let pTwoFaceDownThree = pTwoDeck[fd3]\n\n                    potArray.push(pTwoFaceDownOne)\n                    potArray.push(pTwoFaceDownTwo)\n                    potArray.push(pTwoFaceDownThree)\n                    potArray.push(pTwoFaceUp)\n                    console.log(potArray, \"POT ARRAY DURING AN ITERATION\")\n\n                    new_fu += new_fu\n                    fd1 += new_fu\n                    fd2 += new_fu\n                    fd3 += new_fu\n\n                }\n                console.log(potArray, \"FINAL POT ARRAY\")\n\n                let pOneFUVal = translateFC(pOneFaceUp.number)\n                let pTwoFUVal = translateFC(pTwoFaceUp.number)\n\n                if (potArray) {\n                    if (pOneFUVal < pTwoFUVal) {\n                        sessionStorage.setItem('winner', 2)\n                        dispatch(playerDecks.addToPot({ drawnCards: potArray }))\n                        const timeout = setTimeout(() => {\n                            sessionStorage.setItem('war', 'War')\n                            sessionStorage.setItem('phase', Phase.Distribution)\n                            setPhase(Phase.Distribution)\n                        }, OPERATIONSPEED)\n                        return () => clearTimeout(timeout)\n                    } else {\n                        sessionStorage.setItem('winner', 1)\n                        dispatch(playerDecks.addToPot({ drawnCards: potArray }))\n                        const timeout = setTimeout(() => {\n                            sessionStorage.setItem('war', 'War')\n                            sessionStorage.setItem('phase', Phase.Distribution)\n                            setPhase(Phase.Distribution)\n                        }, OPERATIONSPEED)\n                        return () => clearTimeout(timeout)\n                    }\n\n                }\n\n                return;\n            case Phase.Distribution:\n                console.log(\"REACHED DISTRIBUTION PHASE\")\n                // const playerOneCard = sessionStorage.getItem(\"pOneDraw\")\n                // const playerTwoCard = sessionStorage.getItem(\"pTwoDraw\")\n                const winner = sessionStorage.getItem(\"winner\")\n                const war = sessionStorage.getItem(\"war\")\n\n                if (war === \"No War\") {\n                    console.log(\"NO WAR\")\n                    if (Number(winner) === 1) {\n                        console.log('PLAYER ONE WON')\n                        const data = await dispatch(playerDecks.DeleteAndDistributePlayerCards({ winner: Number(winner) }))\n                        if (data) {\n                            const timeout = setTimeout(() => {\n                                setPhase(Phase.Draw)\n                                sessionStorage.setItem('phase', Phase.Draw)\n                            }, OPERATIONSPEED)\n                            return () => clearTimeout(timeout)\n                        }\n                    }\n                    if (Number(winner) === 2) {\n                        console.log('PLAYER TWO WON')\n                        const data = await dispatch(playerDecks.DeleteAndDistributePlayerCards({ winner: Number(winner) }))\n                        if (data) {\n                            const timeout = setTimeout(() => {\n                                setPhase(Phase.Draw)\n                                sessionStorage.setItem('phase', Phase.Draw)\n                            }, OPERATIONSPEED)\n                            return () => clearTimeout(timeout)\n                        }\n                    }\n                } else {\n                    console.log(\"WAR\")\n                    if (Number(winner) === 1) {\n                        console.log('PLAYER ONE WON WAR')\n                        const data = await dispatch(playerDecks.DeleteAndDistributePlayerCards({ winner: Number(winner) }))\n                        if (data) {\n                            const timeout = setTimeout(() => {\n                                setPhase(Phase.Draw)\n                                sessionStorage.setItem('phase', Phase.Draw)\n                            }, OPERATIONSPEED)\n                            return () => clearTimeout(timeout)\n                        }\n                    }\n                    if (Number(winner) === 2) {\n                        console.log('PLAYER TWO WON WAR')\n                        const data = await dispatch(playerDecks.DeleteAndDistributePlayerCards({ winner: Number(winner) }))\n                        if (data) {\n                            const timeout = setTimeout(() => {\n                                setPhase(Phase.Draw)\n                                sessionStorage.setItem('phase', Phase.Draw)\n                            }, OPERATIONSPEED)\n                            return () => clearTimeout(timeout)\n                        }\n                    }\n                }\n                return;\n            case Phase.End:\n                console.log(\"REACHED END PHASE\")\n                const finalWinner = sessionStorage.getItem(\"FinalWinner\")\n                const data = await dispatch(playerDecks.recordVictory({ winner: finalWinner }))\n                if (data) {\n                    const timeout = setTimeout(() => {\n                        setPhase(null)\n                        sessionStorage.setItem('phase', null)\n                    }, OPERATIONSPEED)\n                    return () => clearTimeout(timeout)\n                }\n                return;\n        }\n\n    }, [dispatch, renderStartBtn, phase])\n\n    return (\n        <div className=\"outmost_ctnr\">\n            <div className=\"card_count_ctnr\">\n                <p className=\"player_one_count_label\">\n                    Player One Card Count: {pOneDeck?.length}\n                </p>\n                <p className=\"player_two_count_label\">\n                    Player Two Card Count: {pTwoDeck?.length}\n                </p>\n            </div>\n            <div className=\"cards_ctnr\">\n                <div className=\"card_ctnr--left\">\n                    {pOneDeckHeight === 4 && <div className=\"player_one_card one\" />}\n                    {pOneDeckHeight === 4 && <div className=\"player_one_card two\" />}\n                    {pOneDeckHeight === 4 && <div className=\"player_one_card three\" />}\n                    {(pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card four\" />}\n                    {(pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card five\" />}\n                    {(pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card six\" />}\n                    {(pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card seven\" />}\n                    {(pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card eight\" />}\n                    {(pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card nine\" />}\n                    {(pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card ten\" />}\n                    {(pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card eleven\" />}\n                    {(pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card twelve\" />}\n                    {(pOneDeckHeight === 0 || pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card thirteen\" />}\n                    {(pOneDeckHeight === 0 || pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card fourteen\" />}\n                    {(pOneDeckHeight === 0 || pOneDeckHeight === 1 || pOneDeckHeight === 2 || pOneDeckHeight === 3 || pOneDeckHeight === 4) && <div className=\"player_one_card fifteen\" />}\n                </div>\n                <div className='phasePrompt'>\n                    {renderStartBtn && <li className='startGame_btn'\n                        onClick={async () => {\n                            const data = await dispatch(playerDecks.addDecksToDatabase({ playerOneDeck: playerOneCards, playerTwoDeck: playerTwoCards }))\n                            if (data) {\n                                setRenderStartBtn(false);\n                                sessionStorage.setItem('phase', Phase.Draw)\n                                setPhase(Phase.Draw)\n                            }\n                        }}\n                    >\n                        Start Game\n                    </li>}\n                    {!renderStartBtn &&\n                        <div className=\"currentPhase_prompt_ctnr\">\n                            <p className=\"currentPhase_label\">\n                                Phase:\n                            </p>\n                            <p className={`currentPhase_prompt ${phase === Phase.War && 'war'}`}>\n                                {phase}\n                            </p>\n                        </div>\n                    }\n\n\n                </div>\n                <div className=\"card_ctnr--right\">\n                    {pTwoDeckHeight === 4 && <div className=\"player_two_card one\" />}\n                    {pTwoDeckHeight === 4 && <div className=\"player_two_card two\" />}\n                    {pTwoDeckHeight === 4 && <div className=\"player_two_card three\" />}\n                    {(pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card four\" />}\n                    {(pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card five\" />}\n                    {(pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card six\" />}\n                    {(pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card seven\" />}\n                    {(pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card eight\" />}\n                    {(pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card nine\" />}\n                    {(pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card ten\" />}\n                    {(pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card eleven\" />}\n                    {(pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card twelve\" />}\n                    {(pTwoDeckHeight === 0 || pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card thirteen\" />}\n                    {(pTwoDeckHeight === 0 || pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card fourteen\" />}\n                    {(pTwoDeckHeight === 0 || pTwoDeckHeight === 1 || pTwoDeckHeight === 2 || pTwoDeckHeight === 3 || pTwoDeckHeight === 4) && <div className=\"player_two_card fifteen\" />}\n                </div>\n            </div>\n            <div className=\"playing_field\">\n                <div className=\"pf--one\">\n                    {phase === Phase.War &&\n                        <div className=\"war_fd_cards_ctnr\">\n                            <div className=\"playerOne_pf_card card-slot1 facedown\">\n                                <img src={cardback} className=\"facedown_cardImg\" />\n                            </div>\n                            <div className=\"playerOne_pf_card card-slot2 facedown\">\n                                <img src={cardback} className=\"facedown_cardImg\" />\n                            </div>\n                            <div className=\"playerOne_pf_card card-slot3 facedown\">\n                                <img src={cardback} className=\"facedown_cardImg\" />\n                            </div>\n                        </div>\n                    }\n                    <div className=\"playerOne_pf_card card-slot4\">\n                        <div className=\"top_suit_ctnr--left\">\n                            <li className=\"card_num\">{pOneCardNumber}</li>\n                            <img src={(pOneCardSuit === 'Club' ? club : undefined) || (pOneCardSuit === 'Heart' ? heart : undefined) || (pOneCardSuit === 'Diamond' ? diamond : undefined) || (pOneCardSuit === 'Spade' ? spade : undefined)} className=\"suit--top\" />\n                        </div>\n                        <div className=\"mid_suit_ctnr\">\n                            <img src={(pOneCardSuit === 'Club' ? club : undefined) || (pOneCardSuit === 'Heart' ? heart : undefined) || (pOneCardSuit === 'Diamond' ? diamond : undefined) || (pOneCardSuit === 'Spade' ? spade : undefined)} className=\"suit--mid\" />\n                        </div>\n                        <div className=\"bottom_suit_ctnr--left\">\n                            <img src={(pOneCardSuit === 'Club' ? club : undefined) || (pOneCardSuit === 'Heart' ? heart : undefined) || (pOneCardSuit === 'Diamond' ? diamond : undefined) || (pOneCardSuit === 'Spade' ? spade : undefined)} className=\"suit--bottom\" />\n                            <li className=\"card_num\">{pOneCardNumber}</li>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"pf--two\">\n                    <div className=\"playerTwo_pf_card card-slot1\">\n                        <div className=\"top_suit_ctnr--right\">\n                            <li className=\"card_num\" >{pTwoCardNumber}</li>\n                            <img src={(pTwoCardSuit === 'Club' ? club : undefined) || (pTwoCardSuit === 'Heart' ? heart : undefined) || (pTwoCardSuit === 'Diamond' ? diamond : undefined) || (pTwoCardSuit === 'Spade' ? spade : undefined)} className=\"suit--top\" />\n                        </div>\n                        <div className=\"mid_suit_ctnr\">\n                            <img src={(pTwoCardSuit === 'Club' ? club : undefined) || (pTwoCardSuit === 'Heart' ? heart : undefined) || (pTwoCardSuit === 'Diamond' ? diamond : undefined) || (pTwoCardSuit === 'Spade' ? spade : undefined)} className=\"suit--mid\" />\n                        </div>\n                        <div className=\"bottom_suit_ctnr--right\">\n                            <img src={(pTwoCardSuit === 'Club' ? club : undefined) || (pTwoCardSuit === 'Heart' ? heart : undefined) || (pTwoCardSuit === 'Diamond' ? diamond : undefined) || (pTwoCardSuit === 'Spade' ? spade : undefined)} className=\"suit--bottom\" />\n                            <li className=\"card_num\">{pTwoCardNumber}</li>\n                        </div>\n                    </div>\n                    {phase === Phase.War &&\n                        <div className=\"war_fd_cards_ctnr\">\n                            <div className=\"playerTwo_pf_card card-slot2 facedown\">\n                                <img src={cardback} className=\"facedown_cardImg\" />\n                            </div>\n                            <div className=\"playerTwo_pf_card card-slot3 facedown\">\n                                <img src={cardback} className=\"facedown_cardImg\" />\n                            </div>\n                            <div className=\"playerTwo_pf_card card-slot4 facedown\">\n                                <img src={cardback} className=\"facedown_cardImg\" />\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Mainpage;"]},"metadata":{},"sourceType":"module"}