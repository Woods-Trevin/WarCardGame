{"ast":null,"code":"var _jsxFileName = \"/Users/liu/Desktop/AppAcademy/TakeHomeProj/frontend/war_card_game/src/components/mainpage/index.js\",\n    _s = $RefreshSig$();\n\nimport \"./mainpage.css\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as playerDecks from '../../store/playerdecks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst deck = require('../../deck');\n\nfunction Mainpage() {\n  _s();\n\n  const [shuffledDeck, setShuffledDeck] = useState(); // console.log(shuffledDeck);\n\n  const [playerOneCards, setPlayerOneCards] = useState();\n  const [playerTwoCards, setPlayerTwoCards] = useState();\n  const dispatch = useDispatch();\n  const pOneDeck = useSelector(state => {\n    var _state$playerDecks;\n\n    return (_state$playerDecks = state.playerDecks) === null || _state$playerDecks === void 0 ? void 0 : _state$playerDecks.playerOneDeck;\n  }); // console.log(pOneDeck.pop())\n\n  const pTwoDeck = useSelector(state => {\n    var _state$playerDecks2;\n\n    return (_state$playerDecks2 = state.playerDecks) === null || _state$playerDecks2 === void 0 ? void 0 : _state$playerDecks2.playerTwoDeck;\n  }); // console.log(pTwoDeck.pop())\n\n  const [renderStartBtn, setRenderStartBtn] = useState(true);\n\n  function shuffle(deck) {\n    let currentIndex = deck.length;\n    let randomIndex = 0; // O(n)\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [deck[currentIndex], deck[randomIndex]] = [deck[randomIndex], deck[currentIndex]];\n    } // console.log(deck);\n\n\n    return deck;\n  }\n\n  function distributeCards(deck) {\n    let playerOneCards = deck.splice(0, 26);\n    setPlayerOneCards(playerOneCards);\n    let playerTwoCards = deck;\n    setPlayerTwoCards(playerTwoCards);\n  }\n\n  const calculate = (pOneCard, pTwoCard) => {\n    console.log(pOneCard);\n    console.log(pTwoCard);\n  };\n\n  const Phase = {\n    Draw: 'Draw',\n    Calculation: 'Calculation',\n    War: 'War',\n    Distribution: 'Distribution',\n    End: 'End'\n  };\n  const [phase, setPhase] = useState(Phase.Draw);\n  console.log(phase, \"CURRENT PHASE\");\n  useEffect(async () => {\n    const shuffledDeck = shuffle(deck);\n    setShuffledDeck(shuffledDeck);\n    distributeCards(shuffledDeck);\n    const data = await dispatch(playerDecks.get_player_decks());\n\n    if (data.playerOneDeck.length && data.playerTwoDeck.length) {\n      setRenderStartBtn(false);\n    }\n\n    switch (phase) {\n      case Phase.Draw:\n        const pOneDraw = pOneDeck === null || pOneDeck === void 0 ? void 0 : pOneDeck.shift();\n        sessionStorage.setItem(\"pOneDraw\", [pOneDraw.association, pOneDraw.number, pOneDraw.suit, pOneDraw.face]);\n        const pTwoDraw = pTwoDeck === null || pTwoDeck === void 0 ? void 0 : pTwoDeck.shift();\n        sessionStorage.setItem(\"pTwoDraw\", [pTwoDraw.association, pTwoDraw.number, pTwoDraw.suit, pTwoDraw.face]);\n        const delay = setTimeout(() => {\n          setPhase(Phase.Calculation);\n        }, 1000);\n        return () => clearTimeout(delay);\n\n      case Phase.Calculation:\n        const pOneCard = sessionStorage.getItem(\"pOneDraw\");\n        const pTwoCard = sessionStorage.getItem(\"pTwoDraw\");\n        console.log(calculate(pOneCard, pTwoCard));\n        return;\n\n      case Phase.War:\n        return;\n\n      case Phase.Distribution:\n        return;\n\n      case Phase.End:\n        return;\n    }\n  }, [dispatch, renderStartBtn, phase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outmost_ctnr\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_count_ctnr\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player_one_count_label\",\n        children: [\"Player One Card Count: \", pOneDeck === null || pOneDeck === void 0 ? void 0 : pOneDeck.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player_two_count_label\",\n        children: [\"Player Two Card Count: \", pTwoDeck === null || pTwoDeck === void 0 ? void 0 : pTwoDeck.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards_ctnr\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_ctnr--left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card seven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card nine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phasePrompt\",\n        children: renderStartBtn && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"startGame_btn\",\n          onClick: () => {\n            dispatch(playerDecks.addDecksToDatabase({\n              playerOneDeck: playerOneCards,\n              playerTwoDeck: playerTwoCards\n            }));\n            setRenderStartBtn(false);\n            setPhase(Phase.Draw);\n          },\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_ctnr--right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card seven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card nine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playing_field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pf--one\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pf--two\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mainpage, \"+i/r9CO5SAk9+1mTPsoVzyuidsY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Mainpage;\n;\nexport default Mainpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainpage\");","map":{"version":3,"sources":["/Users/liu/Desktop/AppAcademy/TakeHomeProj/frontend/war_card_game/src/components/mainpage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","playerDecks","deck","require","Mainpage","shuffledDeck","setShuffledDeck","playerOneCards","setPlayerOneCards","playerTwoCards","setPlayerTwoCards","dispatch","pOneDeck","state","playerOneDeck","pTwoDeck","playerTwoDeck","renderStartBtn","setRenderStartBtn","shuffle","currentIndex","length","randomIndex","Math","floor","random","distributeCards","splice","calculate","pOneCard","pTwoCard","console","log","Phase","Draw","Calculation","War","Distribution","End","phase","setPhase","data","get_player_decks","pOneDraw","shift","sessionStorage","setItem","association","number","suit","face","pTwoDraw","delay","setTimeout","clearTimeout","getItem","addDecksToDatabase"],"mappings":"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","sourcesContent":["import \"./mainpage.css\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as playerDecks from '../../store/playerdecks'\nconst deck = require('../../deck');\n\n\nfunction Mainpage() {\n    const [shuffledDeck, setShuffledDeck] = useState();\n    // console.log(shuffledDeck);\n    const [playerOneCards, setPlayerOneCards] = useState();\n    const [playerTwoCards, setPlayerTwoCards] = useState();\n    const dispatch = useDispatch();\n\n    const pOneDeck = useSelector(state => state.playerDecks?.playerOneDeck)\n    // console.log(pOneDeck.pop())\n    const pTwoDeck = useSelector(state => state.playerDecks?.playerTwoDeck)\n    // console.log(pTwoDeck.pop())\n\n    const [renderStartBtn, setRenderStartBtn] = useState(true)\n\n\n\n\n    function shuffle(deck) {\n        let currentIndex = deck.length;\n        let randomIndex = 0;\n\n        // O(n)\n        while (currentIndex !== 0) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex--;\n\n            [deck[currentIndex], deck[randomIndex]] = [deck[randomIndex], deck[currentIndex]]\n        }\n        // console.log(deck);\n        return deck;\n\n    }\n\n    function distributeCards(deck) {\n        let playerOneCards = deck.splice(0, 26);\n        setPlayerOneCards(playerOneCards)\n        let playerTwoCards = deck\n        setPlayerTwoCards(playerTwoCards)\n\n    }\n\n    const calculate = (pOneCard, pTwoCard) => {\n        console.log(pOneCard)\n        console.log(pTwoCard)\n    }\n\n\n    const Phase = {\n        Draw: 'Draw',\n        Calculation: 'Calculation',\n        War: 'War',\n        Distribution: 'Distribution',\n        End: 'End',\n    }\n\n    const [phase, setPhase] = useState(Phase.Draw)\n    console.log(phase, \"CURRENT PHASE\")\n\n\n    useEffect(async () => {\n        const shuffledDeck = shuffle(deck)\n        setShuffledDeck(shuffledDeck)\n        distributeCards(shuffledDeck)\n        const data = await dispatch(playerDecks.get_player_decks())\n\n        if (data.playerOneDeck.length && data.playerTwoDeck.length) {\n            setRenderStartBtn(false)\n        }\n\n\n        switch (phase) {\n            case Phase.Draw:\n                const pOneDraw = pOneDeck?.shift()\n                sessionStorage.setItem(\"pOneDraw\",\n                    [\n                        pOneDraw.association,\n                        pOneDraw.number,\n                        pOneDraw.suit,\n                        pOneDraw.face\n                    ])\n                const pTwoDraw = pTwoDeck?.shift()\n                sessionStorage.setItem(\"pTwoDraw\", [\n                    pTwoDraw.association,\n                    pTwoDraw.number,\n                    pTwoDraw.suit,\n                    pTwoDraw.face\n                ])\n                const delay = setTimeout(() => {\n                    setPhase(Phase.Calculation)\n\n                }, 1000)\n                return () => clearTimeout(delay);\n            case Phase.Calculation:\n                const pOneCard = sessionStorage.getItem(\"pOneDraw\")\n                const pTwoCard = sessionStorage.getItem(\"pTwoDraw\")\n                console.log(calculate(pOneCard, pTwoCard))\n                return;\n            case Phase.War:\n                return;\n            case Phase.Distribution:\n                return;\n            case Phase.End:\n                return;\n        }\n\n    }, [dispatch, renderStartBtn, phase])\n\n    return (\n        <div className=\"outmost_ctnr\">\n            <div className=\"card_count_ctnr\">\n                <p className=\"player_one_count_label\">\n                    Player One Card Count: {pOneDeck?.length}\n                </p>\n                <p className=\"player_two_count_label\">\n                    Player Two Card Count: {pTwoDeck?.length}\n                </p>\n            </div>\n            <div className=\"cards_ctnr\">\n                <div className=\"card_ctnr--left\">\n                    <div className=\"player_one_card one\" />\n                    <div className=\"player_one_card two\" />\n                    <div className=\"player_one_card three\" />\n                    <div className=\"player_one_card four\" />\n                    <div className=\"player_one_card five\" />\n                    <div className=\"player_one_card six\" />\n                    <div className=\"player_one_card seven\" />\n                    <div className=\"player_one_card eight\" />\n                    <div className=\"player_one_card nine\" />\n                    <div className=\"player_one_card ten\" />\n                </div>\n                <div className='phasePrompt'>\n                    {renderStartBtn && <li className='startGame_btn'\n                        onClick={() => {\n                            dispatch(playerDecks.addDecksToDatabase({ playerOneDeck: playerOneCards, playerTwoDeck: playerTwoCards }))\n                            setRenderStartBtn(false);\n                            setPhase(Phase.Draw)\n                        }}\n                    >\n                        Start Game\n                    </li>}\n\n\n                </div>\n                <div className=\"card_ctnr--right\">\n                    <div className=\"player_two_card one\" />\n                    <div className=\"player_two_card two\" />\n                    <div className=\"player_two_card three\" />\n                    <div className=\"player_two_card four\" />\n                    <div className=\"player_two_card five\" />\n                    <div className=\"player_two_card six\" />\n                    <div className=\"player_two_card seven\" />\n                    <div className=\"player_two_card eight\" />\n                    <div className=\"player_two_card nine\" />\n                    <div className=\"player_two_card ten\" />\n                </div>\n            </div>\n            <div className=\"playing_field\">\n                <div className=\"pf--one\">\n                    <div className=\"playerOne_pf_card card-slot1\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot2\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot3\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot4\">\n\n                    </div>\n                </div>\n                <div className=\"pf--two\">\n                    <div className=\"playerTwo_pf_card card-slot1\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot2\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot3\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot4\">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Mainpage;"]},"metadata":{},"sourceType":"module"}