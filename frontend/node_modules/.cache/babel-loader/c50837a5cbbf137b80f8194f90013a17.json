{"ast":null,"code":"var _jsxFileName = \"/Users/liu/Desktop/AppAcademy/TakeHomeProj/frontend/war_card_game/src/components/mainpage/index.js\",\n    _s = $RefreshSig$();\n\nimport \"./mainpage.css\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as playerDecks from '../../store/playerdecks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst deck = require('../../deck');\n\nfunction Mainpage() {\n  _s();\n\n  const [shuffledDeck, setShuffledDeck] = useState(); // console.log(shuffledDeck);\n\n  const [playerOneCards, setPlayerOneCards] = useState();\n  const [playerTwoCards, setPlayerTwoCards] = useState();\n  const dispatch = useDispatch();\n  const pOneDeck = useSelector(state => {\n    var _state$playerDecks;\n\n    return (_state$playerDecks = state.playerDecks) === null || _state$playerDecks === void 0 ? void 0 : _state$playerDecks.playerOneDeck;\n  }); // console.log(pOneDeck.pop())\n\n  const pTwoDeck = useSelector(state => {\n    var _state$playerDecks2;\n\n    return (_state$playerDecks2 = state.playerDecks) === null || _state$playerDecks2 === void 0 ? void 0 : _state$playerDecks2.playerTwoDeck;\n  }); // console.log(pTwoDeck.pop())\n\n  const [renderStartBtn, setRenderStartBtn] = useState(true);\n  const currentPhase = sessionStorage.getItem('phase');\n  const [phase, setPhase] = useState(currentPhase);\n  console.log(phase, \"CURRENT PHASE\");\n\n  function shuffle(deck) {\n    let currentIndex = deck.length;\n    let randomIndex = 0; // O(n)\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [deck[currentIndex], deck[randomIndex]] = [deck[randomIndex], deck[currentIndex]];\n    } // console.log(deck);\n\n\n    return deck;\n  }\n\n  function distributeCards(deck) {\n    let playerOneCards = deck.splice(0, 26);\n    setPlayerOneCards(playerOneCards);\n    let playerTwoCards = deck;\n    setPlayerTwoCards(playerTwoCards);\n  }\n\n  const translateFC = () => {\n    if (null) {}\n  };\n\n  const calculate = (pOneCard, pTwoCard) => {\n    const pOneCardSplit = pOneCard.split(',');\n    console.log(pOneCardSplit);\n    const pTwoCardSplit = pTwoCard.split(',');\n    console.log(pTwoCardSplit);\n    const pOneAssoc = pOneCardSplit[0].split('');\n    const pTwoAssoc = pTwoCardSplit[0].split('');\n\n    if (Number(pOneAssoc[0]) < 9 && Number(pTwoAssoc[0]) < 9 && pOneCardSplit[1] !== pTwoCardSplit[1]) {\n      //take numbers in index 1 of initial split    \n      if (pOneCardSplit[1] < pTwoCardSplit[1]) {\n        sessionStorage.setItem('result', 2);\n      } else {\n        sessionStorage.setItem('result', 1);\n      }\n    } else if (Number(pOneAssoc[0]) < 9 && Number(pTwoAssoc[0]) < 9 && pOneCardSplit[1] === pTwoCardSplit[1]) {}\n  };\n\n  const Phase = {\n    Draw: 'Draw',\n    Calculation: 'Calculation',\n    War: 'War',\n    Distribution: 'Distribution',\n    End: 'End'\n  };\n  useEffect(async () => {\n    const shuffledDeck = shuffle(deck);\n    setShuffledDeck(shuffledDeck);\n    distributeCards(shuffledDeck);\n    const data = await dispatch(playerDecks.get_player_decks());\n\n    if (data.playerOneDeck.length && data.playerTwoDeck.length) {\n      setRenderStartBtn(false);\n    }\n\n    switch (phase) {\n      case Phase.Draw:\n        const pOneDraw = pOneDeck === null || pOneDeck === void 0 ? void 0 : pOneDeck.shift();\n        console.log(pOneDraw, \"PONE DRAW\");\n        sessionStorage.setItem(\"pOneDraw\", [pOneDraw.association, pOneDraw.number, pOneDraw.suit, pOneDraw.face]);\n        const pTwoDraw = pTwoDeck === null || pTwoDeck === void 0 ? void 0 : pTwoDeck.shift();\n        console.log(pTwoDraw, \"PTWO DRAW\");\n        sessionStorage.setItem(\"pTwoDraw\", [pTwoDraw.association, pTwoDraw.number, pTwoDraw.suit, pTwoDraw.face]);\n        setPhase(Phase.Calculation);\n\n      case Phase.Calculation:\n        const pOneCard = sessionStorage.getItem(\"pOneDraw\");\n        const pTwoCard = sessionStorage.getItem(\"pTwoDraw\");\n        console.log(calculate(pOneCard, pTwoCard));\n        return;\n\n      case Phase.War:\n        return;\n\n      case Phase.Distribution:\n        return;\n\n      case Phase.End:\n        return;\n    }\n  }, [dispatch, renderStartBtn, phase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outmost_ctnr\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_count_ctnr\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player_one_count_label\",\n        children: [\"Player One Card Count: \", pOneDeck === null || pOneDeck === void 0 ? void 0 : pOneDeck.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player_two_count_label\",\n        children: [\"Player Two Card Count: \", pTwoDeck === null || pTwoDeck === void 0 ? void 0 : pTwoDeck.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards_ctnr\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_ctnr--left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card seven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card nine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phasePrompt\",\n        children: renderStartBtn && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"startGame_btn\",\n          onClick: () => {\n            dispatch(playerDecks.addDecksToDatabase({\n              playerOneDeck: playerOneCards,\n              playerTwoDeck: playerTwoCards\n            }));\n            setRenderStartBtn(false);\n            sessionStorage.setItem('phase', Phase.Draw);\n            setPhase(sessionStorage.getItem('phase'));\n          },\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_ctnr--right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card seven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card nine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playing_field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pf--one\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pf--two\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mainpage, \"1ik7d/6zjrbuaBkxGW0WXzF8O5U=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Mainpage;\n;\nexport default Mainpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainpage\");","map":{"version":3,"sources":["/Users/liu/Desktop/AppAcademy/TakeHomeProj/frontend/war_card_game/src/components/mainpage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","playerDecks","deck","require","Mainpage","shuffledDeck","setShuffledDeck","playerOneCards","setPlayerOneCards","playerTwoCards","setPlayerTwoCards","dispatch","pOneDeck","state","playerOneDeck","pTwoDeck","playerTwoDeck","renderStartBtn","setRenderStartBtn","currentPhase","sessionStorage","getItem","phase","setPhase","console","log","shuffle","currentIndex","length","randomIndex","Math","floor","random","distributeCards","splice","translateFC","calculate","pOneCard","pTwoCard","pOneCardSplit","split","pTwoCardSplit","pOneAssoc","pTwoAssoc","Number","setItem","Phase","Draw","Calculation","War","Distribution","End","data","get_player_decks","pOneDraw","shift","association","number","suit","face","pTwoDraw","addDecksToDatabase"],"mappings":"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","sourcesContent":["import \"./mainpage.css\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as playerDecks from '../../store/playerdecks'\nconst deck = require('../../deck');\n\n\nfunction Mainpage() {\n    const [shuffledDeck, setShuffledDeck] = useState();\n    // console.log(shuffledDeck);\n    const [playerOneCards, setPlayerOneCards] = useState();\n    const [playerTwoCards, setPlayerTwoCards] = useState();\n    const dispatch = useDispatch();\n\n    const pOneDeck = useSelector(state => state.playerDecks?.playerOneDeck)\n    // console.log(pOneDeck.pop())\n    const pTwoDeck = useSelector(state => state.playerDecks?.playerTwoDeck)\n    // console.log(pTwoDeck.pop())\n\n    const [renderStartBtn, setRenderStartBtn] = useState(true)\n    const currentPhase = sessionStorage.getItem('phase')\n    const [phase, setPhase] = useState(currentPhase)\n    console.log(phase, \"CURRENT PHASE\")\n\n\n\n\n    function shuffle(deck) {\n        let currentIndex = deck.length;\n        let randomIndex = 0;\n\n        // O(n)\n        while (currentIndex !== 0) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex--;\n\n            [deck[currentIndex], deck[randomIndex]] = [deck[randomIndex], deck[currentIndex]]\n        }\n        // console.log(deck);\n        return deck;\n\n    }\n\n    function distributeCards(deck) {\n        let playerOneCards = deck.splice(0, 26);\n        setPlayerOneCards(playerOneCards)\n        let playerTwoCards = deck\n        setPlayerTwoCards(playerTwoCards)\n\n    }\n\n    const translateFC = () => {\n        if (null) {\n\n        }\n    }\n\n    const calculate = (pOneCard, pTwoCard) => {\n        const pOneCardSplit = pOneCard.split(',')\n        console.log(pOneCardSplit)\n        const pTwoCardSplit = pTwoCard.split(',')\n        console.log(pTwoCardSplit)\n\n        const pOneAssoc = pOneCardSplit[0].split('')\n        const pTwoAssoc = pTwoCardSplit[0].split('')\n\n        if ((Number(pOneAssoc[0]) < 9) &&\n            (Number(pTwoAssoc[0]) < 9) &&\n            (pOneCardSplit[1] !== pTwoCardSplit[1])) {\n\n            //take numbers in index 1 of initial split    \n            if (pOneCardSplit[1] < pTwoCardSplit[1]) {\n                sessionStorage.setItem('result', 2)\n            } else {\n                sessionStorage.setItem('result', 1)\n            }\n\n        } else if ((Number(pOneAssoc[0]) < 9) &&\n            (Number(pTwoAssoc[0]) < 9) &&\n            (pOneCardSplit[1] === pTwoCardSplit[1])) {\n\n\n        }\n\n\n    }\n\n\n    const Phase = {\n        Draw: 'Draw',\n        Calculation: 'Calculation',\n        War: 'War',\n        Distribution: 'Distribution',\n        End: 'End',\n    }\n\n\n\n\n\n    useEffect(async () => {\n        const shuffledDeck = shuffle(deck)\n        setShuffledDeck(shuffledDeck)\n        distributeCards(shuffledDeck)\n\n        const data = await dispatch(playerDecks.get_player_decks())\n\n        if (data.playerOneDeck.length && data.playerTwoDeck.length) {\n            setRenderStartBtn(false)\n        }\n\n\n        switch (phase) {\n            case Phase.Draw:\n                const pOneDraw = pOneDeck?.shift()\n                console.log(pOneDraw, \"PONE DRAW\")\n                sessionStorage.setItem(\"pOneDraw\",\n                    [\n                        pOneDraw.association,\n                        pOneDraw.number,\n                        pOneDraw.suit,\n                        pOneDraw.face\n                    ])\n                const pTwoDraw = pTwoDeck?.shift()\n                console.log(pTwoDraw, \"PTWO DRAW\")\n                sessionStorage.setItem(\"pTwoDraw\", [\n                    pTwoDraw.association,\n                    pTwoDraw.number,\n                    pTwoDraw.suit,\n                    pTwoDraw.face\n                ])\n                setPhase(Phase.Calculation)\n            case Phase.Calculation:\n                const pOneCard = sessionStorage.getItem(\"pOneDraw\")\n                const pTwoCard = sessionStorage.getItem(\"pTwoDraw\")\n                console.log(calculate(pOneCard, pTwoCard))\n                return;\n            case Phase.War:\n                return;\n            case Phase.Distribution:\n                return;\n            case Phase.End:\n                return;\n        }\n\n    }, [dispatch, renderStartBtn, phase])\n\n    return (\n        <div className=\"outmost_ctnr\">\n            <div className=\"card_count_ctnr\">\n                <p className=\"player_one_count_label\">\n                    Player One Card Count: {pOneDeck?.length}\n                </p>\n                <p className=\"player_two_count_label\">\n                    Player Two Card Count: {pTwoDeck?.length}\n                </p>\n            </div>\n            <div className=\"cards_ctnr\">\n                <div className=\"card_ctnr--left\">\n                    <div className=\"player_one_card one\" />\n                    <div className=\"player_one_card two\" />\n                    <div className=\"player_one_card three\" />\n                    <div className=\"player_one_card four\" />\n                    <div className=\"player_one_card five\" />\n                    <div className=\"player_one_card six\" />\n                    <div className=\"player_one_card seven\" />\n                    <div className=\"player_one_card eight\" />\n                    <div className=\"player_one_card nine\" />\n                    <div className=\"player_one_card ten\" />\n                </div>\n                <div className='phasePrompt'>\n                    {renderStartBtn && <li className='startGame_btn'\n                        onClick={() => {\n                            dispatch(playerDecks.addDecksToDatabase({ playerOneDeck: playerOneCards, playerTwoDeck: playerTwoCards }))\n                            setRenderStartBtn(false);\n                            sessionStorage.setItem('phase', Phase.Draw)\n                            setPhase(sessionStorage.getItem('phase'))\n                        }}\n                    >\n                        Start Game\n                    </li>}\n\n\n                </div>\n                <div className=\"card_ctnr--right\">\n                    <div className=\"player_two_card one\" />\n                    <div className=\"player_two_card two\" />\n                    <div className=\"player_two_card three\" />\n                    <div className=\"player_two_card four\" />\n                    <div className=\"player_two_card five\" />\n                    <div className=\"player_two_card six\" />\n                    <div className=\"player_two_card seven\" />\n                    <div className=\"player_two_card eight\" />\n                    <div className=\"player_two_card nine\" />\n                    <div className=\"player_two_card ten\" />\n                </div>\n            </div>\n            <div className=\"playing_field\">\n                <div className=\"pf--one\">\n                    <div className=\"playerOne_pf_card card-slot1\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot2\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot3\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot4\">\n\n                    </div>\n                </div>\n                <div className=\"pf--two\">\n                    <div className=\"playerTwo_pf_card card-slot1\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot2\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot3\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot4\">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Mainpage;"]},"metadata":{},"sourceType":"module"}