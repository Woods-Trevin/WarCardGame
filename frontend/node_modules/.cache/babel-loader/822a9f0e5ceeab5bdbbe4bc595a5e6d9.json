{"ast":null,"code":"var _jsxFileName = \"/Users/liu/Desktop/AppAcademy/TakeHomeProj/frontend/war_card_game/src/components/mainpage/index.js\",\n    _s = $RefreshSig$();\n\nimport \"./mainpage.css\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as playerDecks from '../../store/playerdecks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst deck = require('../../deck');\n\nfunction Mainpage() {\n  _s();\n\n  const [shuffledDeck, setShuffledDeck] = useState(); // console.log(shuffledDeck);\n\n  const [playerOneCards, setPlayerOneCards] = useState();\n  const [playerTwoCards, setPlayerTwoCards] = useState();\n  const dispatch = useDispatch();\n  const pOneDeck = useSelector(state => {\n    var _state$playerDecks;\n\n    return (_state$playerDecks = state.playerDecks) === null || _state$playerDecks === void 0 ? void 0 : _state$playerDecks.playerOneDeck;\n  }); // console.log(pOneDeck.pop())\n\n  const pTwoDeck = useSelector(state => {\n    var _state$playerDecks2;\n\n    return (_state$playerDecks2 = state.playerDecks) === null || _state$playerDecks2 === void 0 ? void 0 : _state$playerDecks2.playerTwoDeck;\n  }); // console.log(pTwoDeck.pop())\n\n  const [renderStartBtn, setRenderStartBtn] = useState(true);\n\n  function shuffle(deck) {\n    let currentIndex = deck.length;\n    let randomIndex = 0; // O(n)\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [deck[currentIndex], deck[randomIndex]] = [deck[randomIndex], deck[currentIndex]];\n    } // console.log(deck);\n\n\n    return deck;\n  }\n\n  function distributeCards(deck) {\n    let playerOneCards = deck.splice(0, 26);\n    setPlayerOneCards(playerOneCards);\n    let playerTwoCards = deck;\n    setPlayerTwoCards(playerTwoCards);\n  }\n\n  const translateFC = cardVal => {\n    console.log(cardVal, \"CARD VALUE FOR FACECARD\");\n\n    if (cardVal === 'J') {\n      return 11;\n    } else if (cardVal === 'Q') {\n      return 12;\n    } else if (cardVal === 'K') {\n      return 13;\n    } else if (cardVal === 'A') {\n      return 14;\n    } else {\n      return Number(cardVal);\n    }\n  };\n\n  const calculate = (pOneCard, pTwoCard) => {\n    const pOneCardSplit = pOneCard.split(',');\n    console.log(pOneCardSplit);\n    const pTwoCardSplit = pTwoCard.split(',');\n    console.log(pTwoCardSplit);\n\n    if (pOneCardSplit[3] === 'false' && pTwoCardSplit[3] === 'false') {\n      //both cards are number cards\n      //compare numbers from index 1 of initial split    \n      if (Number(pOneCardSplit[1]) < Number(pTwoCardSplit[1])) {\n        sessionStorage.setItem('winner', 2);\n        setPhase(Phase.Distribution);\n        sessionStorage.setItem('phase', Phase.Distribution);\n      } else if (Number(pOneCardSplit[1]) > Number(pTwoCardSplit[1])) {\n        sessionStorage.setItem('winner', 1);\n        setPhase(Phase.Distribution);\n        sessionStorage.setItem('phase', Phase.Distribution);\n      } else {\n        setPhase(Phase.War);\n      }\n    } else if (!(pOneCardSplit[3] === 'false' && pTwoCardSplit[3] === 'false')) {\n      //either both cards are not number cards or one card is not a number card\n      const pOneCardVal = pOneCardSplit[1];\n      const pTwoCardVal = pTwoCardSplit[1];\n      const pOneVal = translateFC(pOneCardVal);\n      console.log(pOneVal, \"VALUE OF PLAYER ONE CARD\");\n      const pTwoVal = translateFC(pTwoCardVal);\n      console.log(pTwoVal, \"VALUE OF PLAYER TWO CARD\");\n\n      if (pOneVal > pTwoVal) {\n        sessionStorage.setItem('winner', 1);\n        setPhase(Phase.Distribution);\n        sessionStorage.setItem('phase', Phase.Distribution);\n      } else if (pOneVal < pTwoVal) {\n        sessionStorage.setItem('winner', 2);\n        setPhase(Phase.Distribution);\n        sessionStorage.setItem('phase', Phase.Distribution);\n      } else {\n        setPhase(Phase.War);\n      }\n    }\n  };\n\n  const Phase = {\n    Draw: 'Draw',\n    Calculation: 'Calculation',\n    War: 'War',\n    Distribution: 'Distribution',\n    End: 'End'\n  };\n  const currentPhase = sessionStorage.getItem('phase');\n  const [phase, setPhase] = useState(currentPhase ? currentPhase : null);\n  console.log(phase, \"CURRENT PHASE\");\n  useEffect(async () => {\n    const shuffledDeck = shuffle(deck);\n    setShuffledDeck(shuffledDeck);\n    distributeCards(shuffledDeck);\n    const data = await dispatch(playerDecks.get_player_decks());\n\n    if (data.playerOneDeck.length && data.playerTwoDeck.length) {\n      setRenderStartBtn(false);\n    } // calculate(\"7H,8,Heart,false\", \"7D,8,Diamond,false\")\n\n\n    console.log(\"RERENDER\");\n\n    switch (phase) {\n      case Phase.Draw:\n        // console.log(\"Draw Phase\")\n        const pOneDraw = pOneDeck.shift(); // console.log(pOneDraw, \"PONE DRAW\")\n\n        const pTwoDraw = pTwoDeck.shift(); // console.log(pTwoDraw, \"PTWO DRAW\")\n\n        sessionStorage.setItem(\"pOneDraw\", [pOneDraw === null || pOneDraw === void 0 ? void 0 : pOneDraw.association, pOneDraw === null || pOneDraw === void 0 ? void 0 : pOneDraw.number, pOneDraw === null || pOneDraw === void 0 ? void 0 : pOneDraw.suit, pOneDraw === null || pOneDraw === void 0 ? void 0 : pOneDraw.face]);\n        sessionStorage.setItem(\"pTwoDraw\", [pTwoDraw === null || pTwoDraw === void 0 ? void 0 : pTwoDraw.association, pTwoDraw === null || pTwoDraw === void 0 ? void 0 : pTwoDraw.number, pTwoDraw === null || pTwoDraw === void 0 ? void 0 : pTwoDraw.suit, pTwoDraw === null || pTwoDraw === void 0 ? void 0 : pTwoDraw.face]);\n        const timeout = setTimeout(() => {\n          setPhase(Phase.Calculation);\n          sessionStorage.setItem('phase', Phase.Calculation);\n        }, 1000);\n        return () => clearTimeout(timeout);\n\n      case Phase.Calculation:\n        const pOneCard = sessionStorage.getItem(\"pOneDraw\");\n        const pTwoCard = sessionStorage.getItem(\"pTwoDraw\");\n\n        if (pOneCard && pTwoCard) {\n          const timeout = setTimeout(() => {\n            calculate(pOneCard, pTwoCard);\n          }, 1000);\n          return () => clearTimeout(timeout);\n        }\n\n        return;\n\n      case Phase.War:\n        console.log(\"REACHED WAR PHASE\");\n        return;\n\n      case Phase.Distribution:\n        console.log(\"REACHED DISTRIBUTION PHASE\");\n        return;\n\n      case Phase.End:\n        console.log(\"REACHED END PHASE\");\n        return;\n    }\n  }, [dispatch, renderStartBtn, phase]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outmost_ctnr\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_count_ctnr\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player_one_count_label\",\n        children: [\"Player One Card Count: \", pOneDeck === null || pOneDeck === void 0 ? void 0 : pOneDeck.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player_two_count_label\",\n        children: [\"Player Two Card Count: \", pTwoDeck === null || pTwoDeck === void 0 ? void 0 : pTwoDeck.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards_ctnr\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_ctnr--left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card seven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card nine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phasePrompt\",\n        children: renderStartBtn && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"startGame_btn\",\n          onClick: async () => {\n            const data = await dispatch(playerDecks.addDecksToDatabase({\n              playerOneDeck: playerOneCards,\n              playerTwoDeck: playerTwoCards\n            }));\n\n            if (data) {\n              setRenderStartBtn(false);\n              sessionStorage.setItem('phase', Phase.Draw);\n              setPhase(Phase.Draw);\n            }\n          },\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_ctnr--right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card seven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card nine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playing_field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pf--one\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pf--two\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mainpage, \"8hDHORh5I32KtJ8Zvdl4pztCCXY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Mainpage;\n;\nexport default Mainpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainpage\");","map":{"version":3,"sources":["/Users/liu/Desktop/AppAcademy/TakeHomeProj/frontend/war_card_game/src/components/mainpage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","playerDecks","deck","require","Mainpage","shuffledDeck","setShuffledDeck","playerOneCards","setPlayerOneCards","playerTwoCards","setPlayerTwoCards","dispatch","pOneDeck","state","playerOneDeck","pTwoDeck","playerTwoDeck","renderStartBtn","setRenderStartBtn","shuffle","currentIndex","length","randomIndex","Math","floor","random","distributeCards","splice","translateFC","cardVal","console","log","Number","calculate","pOneCard","pTwoCard","pOneCardSplit","split","pTwoCardSplit","sessionStorage","setItem","setPhase","Phase","Distribution","War","pOneCardVal","pTwoCardVal","pOneVal","pTwoVal","Draw","Calculation","End","currentPhase","getItem","phase","data","get_player_decks","pOneDraw","shift","pTwoDraw","association","number","suit","face","timeout","setTimeout","clearTimeout","addDecksToDatabase"],"mappings":"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","sourcesContent":["import \"./mainpage.css\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as playerDecks from '../../store/playerdecks'\nconst deck = require('../../deck');\n\n\nfunction Mainpage() {\n    const [shuffledDeck, setShuffledDeck] = useState();\n    // console.log(shuffledDeck);\n    const [playerOneCards, setPlayerOneCards] = useState();\n    const [playerTwoCards, setPlayerTwoCards] = useState();\n    const dispatch = useDispatch();\n\n    const pOneDeck = useSelector(state => state.playerDecks?.playerOneDeck)\n    // console.log(pOneDeck.pop())\n    const pTwoDeck = useSelector(state => state.playerDecks?.playerTwoDeck)\n    // console.log(pTwoDeck.pop())\n\n    const [renderStartBtn, setRenderStartBtn] = useState(true)\n\n\n\n\n    function shuffle(deck) {\n        let currentIndex = deck.length;\n        let randomIndex = 0;\n\n        // O(n)\n        while (currentIndex !== 0) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex--;\n\n            [deck[currentIndex], deck[randomIndex]] = [deck[randomIndex], deck[currentIndex]]\n        }\n        // console.log(deck);\n        return deck;\n\n    }\n\n    function distributeCards(deck) {\n        let playerOneCards = deck.splice(0, 26);\n        setPlayerOneCards(playerOneCards)\n        let playerTwoCards = deck\n        setPlayerTwoCards(playerTwoCards)\n\n    }\n\n    const translateFC = (cardVal) => {\n        console.log(cardVal, \"CARD VALUE FOR FACECARD\")\n        if (cardVal === 'J') {\n            return 11;\n        } else if (cardVal === 'Q') {\n            return 12;\n        } else if (cardVal === 'K') {\n            return 13;\n        } else if (cardVal === 'A') {\n            return 14;\n        } else {\n            return Number(cardVal);\n        }\n    }\n\n    const calculate = (pOneCard, pTwoCard) => {\n        const pOneCardSplit = pOneCard.split(',')\n        console.log(pOneCardSplit)\n        const pTwoCardSplit = pTwoCard.split(',')\n        console.log(pTwoCardSplit)\n\n\n        if ((pOneCardSplit[3] === 'false' && pTwoCardSplit[3] === 'false')) {\n            //both cards are number cards\n            //compare numbers from index 1 of initial split    \n            if (Number(pOneCardSplit[1]) < Number(pTwoCardSplit[1])) {\n                sessionStorage.setItem('winner', 2)\n                setPhase(Phase.Distribution)\n                sessionStorage.setItem('phase', Phase.Distribution)\n            } else if (Number(pOneCardSplit[1]) > Number(pTwoCardSplit[1])) {\n                sessionStorage.setItem('winner', 1)\n                setPhase(Phase.Distribution)\n                sessionStorage.setItem('phase', Phase.Distribution)\n            } else {\n                setPhase(Phase.War)\n            }\n        } else if (!(pOneCardSplit[3] === 'false' && pTwoCardSplit[3] === 'false')) {\n            //either both cards are not number cards or one card is not a number card\n            const pOneCardVal = pOneCardSplit[1]\n            const pTwoCardVal = pTwoCardSplit[1]\n            const pOneVal = translateFC(pOneCardVal)\n            console.log(pOneVal, \"VALUE OF PLAYER ONE CARD\")\n            const pTwoVal = translateFC(pTwoCardVal)\n            console.log(pTwoVal, \"VALUE OF PLAYER TWO CARD\")\n\n            if (pOneVal > pTwoVal) {\n                sessionStorage.setItem('winner', 1)\n                setPhase(Phase.Distribution)\n                sessionStorage.setItem('phase', Phase.Distribution)\n\n\n            } else if (pOneVal < pTwoVal) {\n                sessionStorage.setItem('winner', 2)\n                setPhase(Phase.Distribution)\n                sessionStorage.setItem('phase', Phase.Distribution)\n\n            } else {\n                setPhase(Phase.War)\n            }\n        }\n\n\n    }\n\n\n    const Phase = {\n        Draw: 'Draw',\n        Calculation: 'Calculation',\n        War: 'War',\n        Distribution: 'Distribution',\n        End: 'End',\n    }\n\n    const currentPhase = sessionStorage.getItem('phase')\n    const [phase, setPhase] = useState(currentPhase ? currentPhase : null)\n    console.log(phase, \"CURRENT PHASE\")\n\n\n\n    useEffect(async () => {\n        const shuffledDeck = shuffle(deck)\n        setShuffledDeck(shuffledDeck)\n        distributeCards(shuffledDeck)\n\n        const data = await dispatch(playerDecks.get_player_decks())\n\n        if (data.playerOneDeck.length && data.playerTwoDeck.length) {\n            setRenderStartBtn(false)\n        }\n\n        // calculate(\"7H,8,Heart,false\", \"7D,8,Diamond,false\")\n\n\n\n        console.log(\"RERENDER\")\n        switch (phase) {\n            case Phase.Draw:\n                // console.log(\"Draw Phase\")\n                const pOneDraw = pOneDeck.shift()\n                // console.log(pOneDraw, \"PONE DRAW\")\n                const pTwoDraw = pTwoDeck.shift()\n                // console.log(pTwoDraw, \"PTWO DRAW\")\n\n                sessionStorage.setItem(\"pOneDraw\",\n                    [\n                        pOneDraw?.association,\n                        pOneDraw?.number,\n                        pOneDraw?.suit,\n                        pOneDraw?.face\n                    ])\n                sessionStorage.setItem(\"pTwoDraw\",\n                    [\n                        pTwoDraw?.association,\n                        pTwoDraw?.number,\n                        pTwoDraw?.suit,\n                        pTwoDraw?.face\n                    ])\n                const timeout = setTimeout(() => {\n                    setPhase(Phase.Calculation)\n                    sessionStorage.setItem('phase', Phase.Calculation)\n                }, 1000)\n\n                return () => clearTimeout(timeout)\n\n            case Phase.Calculation:\n                const pOneCard = sessionStorage.getItem(\"pOneDraw\")\n                const pTwoCard = sessionStorage.getItem(\"pTwoDraw\")\n                if (pOneCard && pTwoCard) {\n                    const timeout = setTimeout(() => {\n                        calculate(pOneCard, pTwoCard)\n                    }, 1000)\n\n                    return () => clearTimeout(timeout)\n                }\n                return;\n            case Phase.War:\n                console.log(\"REACHED WAR PHASE\")\n                return;\n            case Phase.Distribution:\n                console.log(\"REACHED DISTRIBUTION PHASE\")\n                return;\n            case Phase.End:\n                console.log(\"REACHED END PHASE\")\n                return;\n        }\n\n    }, [dispatch, renderStartBtn, phase])\n\n    return (\n        <div className=\"outmost_ctnr\">\n            <div className=\"card_count_ctnr\">\n                <p className=\"player_one_count_label\">\n                    Player One Card Count: {pOneDeck?.length}\n                </p>\n                <p className=\"player_two_count_label\">\n                    Player Two Card Count: {pTwoDeck?.length}\n                </p>\n            </div>\n            <div className=\"cards_ctnr\">\n                <div className=\"card_ctnr--left\">\n                    <div className=\"player_one_card one\" />\n                    <div className=\"player_one_card two\" />\n                    <div className=\"player_one_card three\" />\n                    <div className=\"player_one_card four\" />\n                    <div className=\"player_one_card five\" />\n                    <div className=\"player_one_card six\" />\n                    <div className=\"player_one_card seven\" />\n                    <div className=\"player_one_card eight\" />\n                    <div className=\"player_one_card nine\" />\n                    <div className=\"player_one_card ten\" />\n                </div>\n                <div className='phasePrompt'>\n                    {renderStartBtn && <li className='startGame_btn'\n                        onClick={async () => {\n                            const data = await dispatch(playerDecks.addDecksToDatabase({ playerOneDeck: playerOneCards, playerTwoDeck: playerTwoCards }))\n                            if (data) {\n                                setRenderStartBtn(false);\n                                sessionStorage.setItem('phase', Phase.Draw)\n                                setPhase(Phase.Draw)\n                            }\n                        }}\n                    >\n                        Start Game\n                    </li>}\n\n\n                </div>\n                <div className=\"card_ctnr--right\">\n                    <div className=\"player_two_card one\" />\n                    <div className=\"player_two_card two\" />\n                    <div className=\"player_two_card three\" />\n                    <div className=\"player_two_card four\" />\n                    <div className=\"player_two_card five\" />\n                    <div className=\"player_two_card six\" />\n                    <div className=\"player_two_card seven\" />\n                    <div className=\"player_two_card eight\" />\n                    <div className=\"player_two_card nine\" />\n                    <div className=\"player_two_card ten\" />\n                </div>\n            </div>\n            <div className=\"playing_field\">\n                <div className=\"pf--one\">\n                    <div className=\"playerOne_pf_card card-slot1\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot2\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot3\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot4\">\n\n                    </div>\n                </div>\n                <div className=\"pf--two\">\n                    <div className=\"playerTwo_pf_card card-slot1\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot2\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot3\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot4\">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Mainpage;"]},"metadata":{},"sourceType":"module"}