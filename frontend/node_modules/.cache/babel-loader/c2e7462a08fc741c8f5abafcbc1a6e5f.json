{"ast":null,"code":"var _jsxFileName = \"/Users/liu/Desktop/AppAcademy/TakeHomeProj/frontend/war_card_game/src/components/mainpage/index.js\",\n    _s = $RefreshSig$();\n\nimport \"./mainpage.css\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as playerDecks from '../../store/playerdecks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst deck = require('../../deck');\n\nfunction Mainpage() {\n  _s();\n\n  const [shuffledDeck, setShuffledDeck] = useState(); // console.log(shuffledDeck);\n\n  const [playerOneCards, setPlayerOneCards] = useState();\n  const [playerTwoCards, setPlayerTwoCards] = useState();\n  const dispatch = useDispatch();\n  const pOneDeck = useSelector(state => {\n    var _state$playerDecks;\n\n    return (_state$playerDecks = state.playerDecks) === null || _state$playerDecks === void 0 ? void 0 : _state$playerDecks.playerOneDeck;\n  }); // console.log(pOneDeck.pop())\n\n  const pTwoDeck = useSelector(state => {\n    var _state$playerDecks2;\n\n    return (_state$playerDecks2 = state.playerDecks) === null || _state$playerDecks2 === void 0 ? void 0 : _state$playerDecks2.playerTwoDeck;\n  }); // console.log(pTwoDeck.pop())\n\n  const [renderStartBtn, setRenderStartBtn] = useState(true);\n  const [pOneDrawnCard, setPOneDrawnCard] = useState();\n  const [pTwoDrawnCard, setPTwoDrawnCard] = useState();\n\n  function shuffle(deck) {\n    let currentIndex = deck.length;\n    let randomIndex = 0; // O(n)\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [deck[currentIndex], deck[randomIndex]] = [deck[randomIndex], deck[currentIndex]];\n    } // console.log(deck);\n\n\n    return deck;\n  }\n\n  function distributeCards(deck) {\n    let playerOneCards = deck.splice(0, 26);\n    setPlayerOneCards(playerOneCards);\n    let playerTwoCards = deck;\n    setPlayerTwoCards(playerTwoCards);\n  }\n\n  const translateFC = () => {\n    if (null) {}\n  };\n\n  const calculate = (pOneCard, pTwoCard) => {\n    const pOneCardSplit = pOneCard.split(',');\n    console.log(pOneCardSplit);\n    const pTwoCardSplit = pTwoCard.split(',');\n    console.log(pTwoCardSplit);\n    const pOneAssoc = pOneCardSplit[0].split('');\n    const pTwoAssoc = pTwoCardSplit[0].split('');\n\n    if (Number(pOneAssoc[0]) < 9 && Number(pTwoAssoc[0]) < 9 && pOneCardSplit[1] !== pTwoCardSplit[1]) {\n      //take numbers in index 1 of initial split    \n      if (pOneCardSplit[1] < pTwoCardSplit[1]) {\n        sessionStorage.setItem('result', 2);\n      } else {\n        sessionStorage.setItem('result', 1);\n      }\n    } else if (Number(pOneAssoc[0]) < 9 && Number(pTwoAssoc[0]) < 9 && pOneCardSplit[1] === pTwoCardSplit[1]) {}\n  };\n\n  const Phase = {\n    Draw: 'Draw',\n    Calculation: 'Calculation',\n    War: 'War',\n    Distribution: 'Distribution',\n    End: 'End'\n  };\n  const currentPhase = sessionStorage.getItem('phase');\n  const [phase, setPhase] = useState(currentPhase);\n  console.log(phase, \"CURRENT PHASE\");\n  useEffect(async () => {\n    const shuffledDeck = shuffle(deck);\n    setShuffledDeck(shuffledDeck);\n    distributeCards(shuffledDeck);\n    const data = await dispatch(playerDecks.get_player_decks());\n\n    if (data.playerOneDeck.length && data.playerTwoDeck.length) {\n      setRenderStartBtn(false);\n    }\n\n    console.log(\"RERENDER\");\n\n    switch (phase) {\n      case Phase.Draw:\n        console.log(\"In Switch\");\n        setTimeout(() => {\n          setPOneDrawnCard(pOneDeck.shift());\n        }, 1000);\n        console.log(pOneDrawnCard, \"PONE DRAW\");\n        sessionStorage.setItem(\"pOneDraw\", [pOneDrawnCard.association, pOneDrawnCard.number, pOneDrawnCard.suit, pOneDrawnCard.face]);\n        setPTwoDrawnCard(pTwoDeck.shift());\n        console.log(pTwoDrawnCard, \"PTWO DRAW\");\n        sessionStorage.setItem(\"pTwoDraw\", [pTwoDrawnCard.association, pTwoDrawnCard.number, pTwoDrawnCard.suit, pTwoDrawnCard.face]);\n        setPhase(Phase.Calculation);\n\n      case Phase.Calculation:\n        const pOneCard = sessionStorage.getItem(\"pOneDraw\");\n        const pTwoCard = sessionStorage.getItem(\"pTwoDraw\");\n        console.log(calculate(pOneCard, pTwoCard));\n        return;\n\n      case Phase.War:\n        return;\n\n      case Phase.Distribution:\n        return;\n\n      case Phase.End:\n        return;\n    }\n  }, [dispatch, renderStartBtn, phase, currentPhase, pOneDrawnCard, pTwoDrawnCard]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outmost_ctnr\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_count_ctnr\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player_one_count_label\",\n        children: [\"Player One Card Count: \", pOneDeck === null || pOneDeck === void 0 ? void 0 : pOneDeck.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player_two_count_label\",\n        children: [\"Player Two Card Count: \", pTwoDeck === null || pTwoDeck === void 0 ? void 0 : pTwoDeck.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards_ctnr\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_ctnr--left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card seven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card nine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_one_card ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phasePrompt\",\n        children: renderStartBtn && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"startGame_btn\",\n          onClick: () => {\n            dispatch(playerDecks.addDecksToDatabase({\n              playerOneDeck: playerOneCards,\n              playerTwoDeck: playerTwoCards\n            }));\n            setRenderStartBtn(false);\n            sessionStorage.setItem('phase', Phase.Draw);\n            setPhase(Phase.Draw);\n          },\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card_ctnr--right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card four\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card five\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card six\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card seven\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card eight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card nine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player_two_card ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playing_field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pf--one\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerOne_pf_card card-slot4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pf--two\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playerTwo_pf_card card-slot4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mainpage, \"ZpXUOu9wLa7T4ZVg0XP9IBOGFb0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Mainpage;\n;\nexport default Mainpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainpage\");","map":{"version":3,"sources":["/Users/liu/Desktop/AppAcademy/TakeHomeProj/frontend/war_card_game/src/components/mainpage/index.js"],"names":["useEffect","useState","useDispatch","useSelector","playerDecks","deck","require","Mainpage","shuffledDeck","setShuffledDeck","playerOneCards","setPlayerOneCards","playerTwoCards","setPlayerTwoCards","dispatch","pOneDeck","state","playerOneDeck","pTwoDeck","playerTwoDeck","renderStartBtn","setRenderStartBtn","pOneDrawnCard","setPOneDrawnCard","pTwoDrawnCard","setPTwoDrawnCard","shuffle","currentIndex","length","randomIndex","Math","floor","random","distributeCards","splice","translateFC","calculate","pOneCard","pTwoCard","pOneCardSplit","split","console","log","pTwoCardSplit","pOneAssoc","pTwoAssoc","Number","sessionStorage","setItem","Phase","Draw","Calculation","War","Distribution","End","currentPhase","getItem","phase","setPhase","data","get_player_decks","setTimeout","shift","association","number","suit","face","addDecksToDatabase"],"mappings":"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","sourcesContent":["import \"./mainpage.css\";\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as playerDecks from '../../store/playerdecks'\nconst deck = require('../../deck');\n\n\nfunction Mainpage() {\n    const [shuffledDeck, setShuffledDeck] = useState();\n    // console.log(shuffledDeck);\n    const [playerOneCards, setPlayerOneCards] = useState();\n    const [playerTwoCards, setPlayerTwoCards] = useState();\n    const dispatch = useDispatch();\n\n    const pOneDeck = useSelector(state => state.playerDecks?.playerOneDeck)\n    // console.log(pOneDeck.pop())\n    const pTwoDeck = useSelector(state => state.playerDecks?.playerTwoDeck)\n    // console.log(pTwoDeck.pop())\n\n    const [renderStartBtn, setRenderStartBtn] = useState(true)\n    const [pOneDrawnCard, setPOneDrawnCard] = useState()\n    const [pTwoDrawnCard, setPTwoDrawnCard] = useState()\n\n\n\n\n    function shuffle(deck) {\n        let currentIndex = deck.length;\n        let randomIndex = 0;\n\n        // O(n)\n        while (currentIndex !== 0) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex--;\n\n            [deck[currentIndex], deck[randomIndex]] = [deck[randomIndex], deck[currentIndex]]\n        }\n        // console.log(deck);\n        return deck;\n\n    }\n\n    function distributeCards(deck) {\n        let playerOneCards = deck.splice(0, 26);\n        setPlayerOneCards(playerOneCards)\n        let playerTwoCards = deck\n        setPlayerTwoCards(playerTwoCards)\n\n    }\n\n    const translateFC = () => {\n        if (null) {\n\n        }\n    }\n\n    const calculate = (pOneCard, pTwoCard) => {\n        const pOneCardSplit = pOneCard.split(',')\n        console.log(pOneCardSplit)\n        const pTwoCardSplit = pTwoCard.split(',')\n        console.log(pTwoCardSplit)\n\n        const pOneAssoc = pOneCardSplit[0].split('')\n        const pTwoAssoc = pTwoCardSplit[0].split('')\n\n        if ((Number(pOneAssoc[0]) < 9) &&\n            (Number(pTwoAssoc[0]) < 9) &&\n            (pOneCardSplit[1] !== pTwoCardSplit[1])) {\n\n            //take numbers in index 1 of initial split    \n            if (pOneCardSplit[1] < pTwoCardSplit[1]) {\n                sessionStorage.setItem('result', 2)\n            } else {\n                sessionStorage.setItem('result', 1)\n            }\n\n        } else if ((Number(pOneAssoc[0]) < 9) &&\n            (Number(pTwoAssoc[0]) < 9) &&\n            (pOneCardSplit[1] === pTwoCardSplit[1])) {\n\n\n        }\n\n\n    }\n\n\n    const Phase = {\n        Draw: 'Draw',\n        Calculation: 'Calculation',\n        War: 'War',\n        Distribution: 'Distribution',\n        End: 'End',\n    }\n\n    const currentPhase = sessionStorage.getItem('phase')\n    const [phase, setPhase] = useState(currentPhase)\n    console.log(phase, \"CURRENT PHASE\")\n\n\n\n    useEffect(async () => {\n        const shuffledDeck = shuffle(deck)\n        setShuffledDeck(shuffledDeck)\n        distributeCards(shuffledDeck)\n\n        const data = await dispatch(playerDecks.get_player_decks())\n\n        if (data.playerOneDeck.length && data.playerTwoDeck.length) {\n            setRenderStartBtn(false)\n        }\n\n        console.log(\"RERENDER\")\n        switch (phase) {\n            case Phase.Draw:\n                console.log(\"In Switch\")\n                setTimeout(() => {\n                    setPOneDrawnCard(pOneDeck.shift())\n                }, 1000)\n                console.log(pOneDrawnCard, \"PONE DRAW\")\n                sessionStorage.setItem(\"pOneDraw\",\n                    [\n                        pOneDrawnCard.association,\n                        pOneDrawnCard.number,\n                        pOneDrawnCard.suit,\n                        pOneDrawnCard.face\n                    ])\n                setPTwoDrawnCard(pTwoDeck.shift())\n                console.log(pTwoDrawnCard, \"PTWO DRAW\")\n                sessionStorage.setItem(\"pTwoDraw\", [\n                    pTwoDrawnCard.association,\n                    pTwoDrawnCard.number,\n                    pTwoDrawnCard.suit,\n                    pTwoDrawnCard.face\n                ])\n                setPhase(Phase.Calculation)\n            case Phase.Calculation:\n                const pOneCard = sessionStorage.getItem(\"pOneDraw\")\n                const pTwoCard = sessionStorage.getItem(\"pTwoDraw\")\n                console.log(calculate(pOneCard, pTwoCard))\n                return;\n            case Phase.War:\n                return;\n            case Phase.Distribution:\n                return;\n            case Phase.End:\n                return;\n        }\n\n    }, [dispatch, renderStartBtn, phase, currentPhase, pOneDrawnCard, pTwoDrawnCard])\n\n    return (\n        <div className=\"outmost_ctnr\">\n            <div className=\"card_count_ctnr\">\n                <p className=\"player_one_count_label\">\n                    Player One Card Count: {pOneDeck?.length}\n                </p>\n                <p className=\"player_two_count_label\">\n                    Player Two Card Count: {pTwoDeck?.length}\n                </p>\n            </div>\n            <div className=\"cards_ctnr\">\n                <div className=\"card_ctnr--left\">\n                    <div className=\"player_one_card one\" />\n                    <div className=\"player_one_card two\" />\n                    <div className=\"player_one_card three\" />\n                    <div className=\"player_one_card four\" />\n                    <div className=\"player_one_card five\" />\n                    <div className=\"player_one_card six\" />\n                    <div className=\"player_one_card seven\" />\n                    <div className=\"player_one_card eight\" />\n                    <div className=\"player_one_card nine\" />\n                    <div className=\"player_one_card ten\" />\n                </div>\n                <div className='phasePrompt'>\n                    {renderStartBtn && <li className='startGame_btn'\n                        onClick={() => {\n                            dispatch(playerDecks.addDecksToDatabase({ playerOneDeck: playerOneCards, playerTwoDeck: playerTwoCards }))\n                            setRenderStartBtn(false);\n                            sessionStorage.setItem('phase', Phase.Draw)\n                            setPhase(Phase.Draw)\n                        }}\n                    >\n                        Start Game\n                    </li>}\n\n\n                </div>\n                <div className=\"card_ctnr--right\">\n                    <div className=\"player_two_card one\" />\n                    <div className=\"player_two_card two\" />\n                    <div className=\"player_two_card three\" />\n                    <div className=\"player_two_card four\" />\n                    <div className=\"player_two_card five\" />\n                    <div className=\"player_two_card six\" />\n                    <div className=\"player_two_card seven\" />\n                    <div className=\"player_two_card eight\" />\n                    <div className=\"player_two_card nine\" />\n                    <div className=\"player_two_card ten\" />\n                </div>\n            </div>\n            <div className=\"playing_field\">\n                <div className=\"pf--one\">\n                    <div className=\"playerOne_pf_card card-slot1\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot2\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot3\">\n\n                    </div>\n                    <div className=\"playerOne_pf_card card-slot4\">\n\n                    </div>\n                </div>\n                <div className=\"pf--two\">\n                    <div className=\"playerTwo_pf_card card-slot1\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot2\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot3\">\n\n                    </div>\n                    <div className=\"playerTwo_pf_card card-slot4\">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Mainpage;"]},"metadata":{},"sourceType":"module"}